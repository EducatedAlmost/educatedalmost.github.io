[{"content":"  If you are unfamiliar with the geography of the area, see my previous post: Famine, Sword, and Fire\n As I said there, this is my attempt at a nonpartisan assembly and analysis of the events of the Russian Invasion of Ukraine, this post on the first forty-eight hours, as much for my own sake as anyone else\u0026#39;s. Schelling points abound: Kiev/Kyiv, Dnieper/Dnipro, Chernigov/Chernihiv; my choice of spelling should not be taken to imply that I take any stance on geographical or political matters.\nWhat happened?  Buildup  As early as March 2021, Putin began amassing troops in the area. Their number would fluctuate but on the 10th of February 2022, Russia and Belarus initiated ten days of joint military exercises1 between 30k Russian troops and almost all (~50k) Belarusian forces. Allied Resolve 2022 was due to conclude on the 20th, but when the date came Russia announced the exercises would continue. On the 21st of February, Russia recognised the two breakaway republics and sent in \u0026#39;peacekeeping\u0026#39; forces. Between Belarus, the people\u0026#39;s republics, Crimea, and the Russian–Ukrainian border, Russia had gathered 150–200k personnel in the area surrounding Ukraine.\n  Movements  Commencement  At 2022/02/24 06:00 UTC+3, Putin announced that Russia was launching a \u0026#39;special military operation\u0026#39; in Ukraine with the purpose to \u0026#39;demilitarise and de-Nazify Ukraine\u0026#39;, and put an end to the war in Donbas.\n  In the air  From 2022/02/24 03:00 GMT, 05:00 EET, air strikes occured nationwide, concentrating on air defences and military infrastructure. Russia achieved air superiority as was expected.\n  Donbas  Despite being the focus of the fighting for the past eight years, movement of the Donbas front has been minimal. It isn\u0026#39;t clear if this is due to the large acculumation of Ukrainian forces before the invasion or that Russia have chosen to push on other fronts.\n The largest Ukrainian-held city in this area is Mariupol, and a spearhead towards the city is the largest change of the front.\n  The Russian–Ukrainian border (Belgorod, Kharkiv)  The Russian–Ukrainian border was expected to be the main front of the attack, north of the major concentration of Ukrainian troops in the Donbas. The advance included a large number of armoured vehicles, taking large casualties without seizing Kharkiv. North of Kharkiv, however, Russian forces have surrounded the cities of Sumy and Konotop.\n  Crimea \u0026amp; Kherson  The isthmus joining Crimea to the Kherson Oblast is just 8km wide; just 8000 men could form a wall across it standing shoulder-to-shoulder. The possibility of a traditional attack seems ludicrous, perhaps requiring airbourne landings in the enemy\u0026#39;s rear, and yet no such thing seems to have happened and this has been the most successful front of the invasion.\n The Ukrainian coast, not including Crimea, was historically known as Novorossiya (\u0026#39;New Russia\u0026#39;), so you might see this name used to refer to the Mykolaiv, Kherson, and Zaporizhzhia Oblasts.\nWestwards  The first afternoon Russia took Nova Kakhovka, location of the Kakhovka Hydroelectric Power Plant, and in the evening the Antonovskiy Bridge, downstream of the powerplant and 10 km upstream of Kherson proper. These are the two southernmost crossings of the Dnieper. 100 km from the Russian lines that morning, the southern entrance to West Ukraine had been captured.\n 50 km beyond Kherson is Mykolaiv, and there were reports on the first day of Russian tanks being seen on the outskirts of the city which seems unlikely. The Ukrainians were able to retake at least Antonovskiy Bridge only to lose it again on the 25th.\n  Eastwards  A second force headed east from Crimea, towards the city of Melitopol. As of the evening of the 25th there are reports that each side controls a portion of the city, or that Russian forces have surrounded it.\n The objective for this front is likely to join with the Donbas front. There are reports that a naval landing has been attempted between Melitopol and Mariupol which would advance this objective.\n    Belarus \u0026amp; Kiev  The viability of a large attack from this direction was widely dismissed. The Pinsk/Pripyat marshes are known for being unsuited for a swift advance, and there are few roads if one wishes to avoid the marshes. Despite this, it has become possibly the most important theatre of the war.\nThe far west (Brest, Lutsk, Volyn)  There were some reports of an incursion of the Belarusian–Ukrainian border near to Poland. But these were mistaken2, as far as we can tell. There are reports that troops are now assembling at Brest, possibly to cut Ukraine off from Poland and the NATO materiel that comes across that border, but it remains to be seen.\n  East bank of the Dnieper  An advance of Russians across the Belarusian border was halted when it reached Chernihiv (Chernigov). Instead the Russians have bypassed Chernihiv, passing between it and the Dnieper.\n  West bank of the Dnieper  Early in the morning video was released showing a column of armoured vehicles entering Ukraine from the Vilcha checkpoint on the border with Belarus. Ukraine reported that their advance was halted, but later in the day troops took Pripyat, location of the Chernobyl Nuclear Power Plant, and the city Chernobyl to its south, continuing to Ivankiv, halfway to Kyiv.\n  Hostomel Airport (aka Antonov Airport)  Hostomel/Gostomel is a town to the northwest of Kyiv, 10 km from its extremeties and 20 km from its centre.\n \u0026gt;30 Russian helicopters landed troops at the airport, hoping to create an airbridge to Kyiv. They were successful in gaining control of the airport but were soon attacked by the Ukrainian 4th Rapid Reaction Brigade.\n Ukrainian reports suggest that the Russians were entirely destroyed, denied by the Russians. Following the success at Ivankiv, the Russians were reinforced from the north. Russia claims that 200 Ukrainians were killed whilst Russia lost none.\n  Kyiv  As Russian troops approach Kyiv from the north on the both the west and east banks of the Dnieper, small arms fire can be heard by residents. The Ukrainians have distributed thousands of automatic rifles to Kyiv\u0026#39;s inhabitants, and anti-armour weapons have arrived in the city from NATO members.\n There are reports that power plants are being hit, attack helicopters amassed in Belarus, and troops moving to encircle the city from the east and west. The capture of Kiev, and its government, must be Russia\u0026#39;s primary objective. It seems that this city will be the focus of the next 48 hours.\n The difficulty of moving across the marshes is probably the reason that Russia is flying troops into Kyiv, despite the danger. Ukraine\u0026#39;s military have claimed that on the night of 2022/02/25 their air defence downed a Russian transport plane ferrying troops to the south of Kyiv.\n    Zmiinyi Island  In what has become one of the most famous moments of the war, the 13 Ukrainian soldiers stationed on Zmiinyi Island told the Black Sea flagship Moskva to \u0026#39;go fuck itself\u0026#39; (\u0026#39;Русский военный корабль, иди на хуй\u0026#39;, \u0026#39;Russky voyenny korabl, idi na khuy\u0026#39;). The 13 died to a man. Bizarrely, the Russians have provided a completely opposite claim: that the Ukrainians had 82 soldiers stationed on the small island, all of whom surrendered voluntarily.\n    Ukrainian response  Mobilisation  On the morning of 2022/02/24, the Ukrainian President declared martial law, urging citizens to stay home:\n Dear Ukrainian citizens, this morning President Putin announced a special military operation in Donbas. Russia conducted strikes on our military infrastructure and our border guards. There were blasts heard in many cities of Ukraine. We’re introducing martial law on the whole territory of our country. A minute ago I had a conversation with President Biden. The US have already started uniting international support. Today each of you should keep calm. Stay at home if you can. We are working. The army is working. The whole sector of defense and security is working.\n No panic. We are strong. We are ready for everything. We will win over everybody because we are Ukraine.\n  In the afternoon, the head of customs in Lviv announced:\n Men aged 18-60 will not be allowed to leave the country. Please do not panic and do not try to cross the border on your own! Victory is ours! Glory to Ukraine!\n  Shortly after 2022/02/24 23:00 UTC+2, President Zelensky announced a general mobilisation of Ukrainian males:\n In connection with the military aggression of the Russian Federation against Ukraine and to ensure the defense of the state, maintaining combat and mobilization readiness of the Armed Forces of Ukraine and other military formations, on the basis of the proposal of the National Security and Defense Council of Ukraine. 1, 17, 20 of the first part of Article 106 of the Constitution of Ukraine, I decree: to announce and conduct a general mobilization.\n Full text.3\n I cannot understand why it took 24 hours to announce a mobilisation, an eventuality that had surely been planned for.\n During the course of the 25th, thousands of automatic rifles have been handed out freely, particularly to the inhabitants of Kyiv.\n    Losses  Russian  per Russia   2 planes crashed    per Ukraine   2.8k killed ~80 tanks destroyed \u0026gt;500 vehicles detroyed 10 aircraft shot down 7 helicopters shot down    per UK   450 killed      Ukrainian  per Ukraine   40+ soldiers killed 2 aircraft shot down    per Russia   all airbases and air defence neutralised 14 soldiers surrendered 4 aircraft shot down 1 helicopter shot down 4 drones shot down    per UK   137 killed          Analysis  We must be humble when criticising, both sides have each been planning their actions here for eight years. When identifying missteps, there is a good chance we are wrong and analysing on the basis of insufficient evidence.\nAllied Resolve  It seems that the Allied Resolve military exercises with Belarus exercises were to assemble enough troops to allow for a capture Kyiv through the Pripyat marshes.\n  Ukrainian response  The initial Ukrainian response seemed weak. The delayed conscription. The failure to hold the Crimean chokepoint. Allowing Russia to cross the Dnieper, Ukraine\u0026#39;s greatest natural barrier, on the first day seemed to predict the a wholesale failure of Ukrainian defence.\n Did Ukraine over commit to the east? Did Ukraine neglect the Crimean front? Did Ukraine not give credence to the possibility of invasion until too late?\n All of those could be true. But perhaps, just maybe, much of this is to a Ukrainian plan (copium). The sighting of Russian forces far deeper than they have any right being (Mykolaiv, Zaporizhzhia) suggest to me that Russian forces might be performing deep strikes into Ukrainian territory, think of Rommel\u0026#39;s 7th Panzer Division during Fall Gelb, advancing far with little car for its rear because whatever it leaves behind will need to retreat. The Soviet Deep Battle has been a mainstay of Russian military theory since before WWII. If the Ukrainians predicted this, what\u0026#39;s the effective defence? To allow the enemy armour to penetrate and then close on the baggage trains that follow.\n Maybe this can explain some of the losses at Vilcha, Chernigov, Kharkov. Maybe it\u0026#39;s just copium.\n  Russian performance  The UK MoD believes that Russia has likely not achieved her first-day expectations. Particularly, the loss of Hostomel Airport, if it ever was actually lost, must have been a blow to Russian confidence. Seizing an airport so close to Kyiv, and disabling any nearby air defence, would be a coup de main. The losses around Kharkiv seem particularly heavy, and the advance on the second day seems unremarkable.\n How can we understand this? Are these just probing attacks? UK intelligence suggests that Russia has committed just one third of the forces it assembled for the offensive. A new wave of troops might be moving in to exploit the fronts where they\u0026#39;ve seen most success, Kyiv and Kherson.\n Does anything other than Kyiv really matter? The attacks in the east might not be intended to gain much land at all, but to keep Ukrainian troops there. Either take Kyiv and Ukraine falls, or take the Dnieper and eastern Ukraine is encircled.\n  Predicted next steps  Russia   take Kyiv control Dnieper link northern and southern fronts link Crimean and Donbas fronts    Ukraine   mobilise 1M troops counterattacks to prevent resupply militia wage unconventional warfare in cities        Footnotes   1  https://www.reuters.com/world/europe/russia-belarus-extend-huge-military-exercises-belarus-ministry-2022-02-20/\n  2    3  https://www.ukrinform.ua/rubric-ato/3412114-zelenskij-pidpisav-ukaz-pro-zagalnu-mobilizaciu.html :\n In connection with the military aggression of the Russian Federation against Ukraine and to ensure the defense of the state, maintaining combat and mobilization readiness of the Armed Forces of Ukraine and other military formations, on the basis of the proposal of the National Security and Defense Council of Ukraine. 1, 17, 20 of the first part of Article 106 of the Constitution of Ukraine, I decree: to announce and conduct a general mobilization.\n The mobilization will be carried out on the territory of Vinnytsia, Volyn, Dnipropetrovsk, Donetsk, Zhytomyr, Zakarpattia, Zaporizhia, Ivano-Frankivsk, Kyiv, Kirovohrad. Luhansk, Lviv, Mykolaiv, Odesa, Poltava, Rivne, Sumy, Ternopil, Kharkiv, Kherson, Khmelnytsky, Cherkasy, Chernivtsi, Chernihiv regions, the city of Kyiv.\n The mobilization will be carried out within 90 days from the date of entry into force of this decree.\n The decree also provides for the conscription of conscripts, reservists and vehicles to meet the needs of the Armed Forces, the National Guard, the Security Service of Ukraine, the State Border Guard Service, the State Special Transport Service, the State Service for Special Communications and Information Protection, and other military formations in Ukraine. volumes determined in accordance with the mobilization plans.\n The General Staff of the Armed Forces of Ukraine has been instructed to determine the order and amounts of conscription of conscripts, reservists and vehicles of the national economy within the general mobilization period.\n The Cabinet of Ministers should provide funding and take, within its authority, other measures related to the announcement and conduct of general mobilization.\n In addition, the Security Service of Ukraine has been instructed to take counterintelligence measures during the general mobilization.\n In turn, local executive bodies in cooperation with territorial centers of staffing and social support, with the participation of local governments and with the involvement of enterprises, institutions and organizations of all forms of ownership, individuals - entrepreneurs must organize and provide in the prescribed manner:\n timely notification and arrival of citizens called up for military service, arrival of equipment at assembly points and military units; conscription of conscripts, reservists for military service, their delivery to military units and institutions of the Armed Forces of Ukraine, the National Guard, the Security Service of Ukraine. State Border Guard Service, State Special Transport Service, State Service for Special Communications and Information Protection of Ukraine, other military formations of Ukraine; temporary allocation of buildings, structures, land, transport and other material and technical means, provision of services to the Armed Forces of Ukraine, the National Guard of Ukraine, the Security Service of Ukraine, the State Border Guard Service of Ukraine, the State Special Transport Service, the State Special Communications Service and protection of information of Ukraine and other military formations of Ukraine in accordance with mobilization plans.  Also, the heads of regional state administrations to ensure the establishment and operation of regional, district and city medical commissions.\n     ","permalink":"http://blog.almost.education/posts/2022-02-24/","summary":"If you are unfamiliar with the geography of the area, see my previous post: Famine, Sword, and Fire\n As I said there, this is my attempt at a nonpartisan assembly and analysis of the events of the Russian Invasion of Ukraine, this post on the first forty-eight hours, as much for my own sake as anyone else\u0026#39;s. Schelling points abound: Kiev/Kyiv, Dnieper/Dnipro, Chernigov/Chernihiv; my choice of spelling should not be taken to imply that I take any stance on geographical or political matters.","title":"Ukraine, the first 48 hours"},{"content":"  In a few articles I will attempt to provide some data and analysis on the ongoing conflict in Ukraine.\n In this first post I provide the required politico-economic and geographic knowledge needed to parse the news coming out of Ukraine.\n Subsequent posts will attempt to document the military actions that took place, analyse them, and analyse the greater conflict: its causes, effects, and interpretations.\n Disclaimer: Whilst I am broadly sympathetic to the position of the British government, I am consciously attempting to be non-partisan. The spelling choices I make are just those I am familiar with and do not represent me taking a position on geographical or political claims.\nUkraine  Population inc. disputed territory: 43.4M Population exc. disputed territory: 37.3M Area: 2.5 UKs GDP: $204B, $5k/capita\nArmed Forces of Ukraine  245k active troops, 220k reservists (as of 2022/02/23). 7M fit for service.\n    Disputed territories  Jointly, the Donetsk and Luhansk Oblasts are known as Donbas, a portmanteau of Donets basin.\nDonetsk People\u0026#39;s Republic (DPR/DNR)  Population 2.3M, area: 3% of UK, 1/3 of entire Oblast.\n  Luhansk People\u0026#39;s Republic (LPR/LNR)  Population 1.5M, area: 3% of UK, 1/3 of entire Oblast.\n  Crimean peninsula  Governed by the Autonomous Republic of Crimea and Sevastopol. Population: 2.4M, area: 10% of UK.\n    Russia  Population exc. disputed territory: 143M, area: 70 UKs. GDP: $1.7T, $12k/capita.\nRussian Armed Forces  1M active troops, 2M reservists. The Russians spend ~4% of all GDP on the military, 11th in the world, Israel is the only Western nation higher at 5.3%.\n    Belarus  Population: 9.3M, area: 0.75 UKs. GDP: $58B, $6k/capita\nBelarusian Armed Forces  62k active troops, 350k reservists.\n    Geography  Forest vs steppe  Ukraine can be divided into the forested north-west and the south-east is a steppe, a region of grassland plains. The north-west is almost entirely Ukrainian-speaking, the south-west a mix of Ukrainian- and Russian-speaking populations.\n  Dnieper  Runs north to south, dividing the country in twain, through Kyiv, Cherkasy, Dnipro, Zaporizhzhia, Kherson, into the Black Sea. Apart from the forest–steppe division, it is the greatest feature of the Ukrainian landscape.\n  Bordering countries  Moldova and Romania in the south-west. Small borders in the west with Hungary and Slovakia. A larger western border with Poland. To the north is Belarus. Longest border is with Russia in the east.\n  Pinsk marshes  Also known as the Pripyat marshes, they are famous for their role in WWII. The marshes surround the Pripyat river, which runs east roughly along the Ukrainian–Belarusian border, and drains into the Dnieper in Ukraine\u0026#39;s north.\n  Black Sea  Ukraine\u0026#39;s southern neighbour. Entrance and exit controlled by Turkey.\n  Sea of Azov  Separated from the Black Sea by the Crimean peninsula, connected to the Black Sea by the Kerch Strait.\n  Crimea  A peninsula connected to the mainland by the Isthmus of Perekop. And seperated from southern Russia by the Kerch strait.\n  Cities  I have included some smaller cities because of their relevance to\n  Kyiv  3.0M, north, 100 km from Belarus  Kharkiv  1.4M, east, 30 km from Russia  Odesa  1.0M, south-west, on the coast  Dnipro  980k, east, on Dnieper  Donetsk  905k, east, capital of the DPR  Zaporizhzhia  722k, east, on Dnieper  Lviv  720k, west, 50 km from Poland  Sevastopol  464k, south, Crimean peninsula  Mariupol  431k, east, 20 km from the DPR, on the coast  Luhansk  400k, east, just north of Donetsk, capital of LPR  Kherson  283k, south, 100 km north-west of Crimea      Title  Henry V: Prologue\n  ","permalink":"http://blog.almost.education/posts/famine-sword-fire/","summary":"In a few articles I will attempt to provide some data and analysis on the ongoing conflict in Ukraine.\n In this first post I provide the required politico-economic and geographic knowledge needed to parse the news coming out of Ukraine.\n Subsequent posts will attempt to document the military actions that took place, analyse them, and analyse the greater conflict: its causes, effects, and interpretations.\n Disclaimer: Whilst I am broadly sympathetic to the position of the British government, I am consciously attempting to be non-partisan.","title":"Famine, Sword, and Fire"},{"content":" Read the code: Isogeny\n See how I use it: .bash_profile\n At any one time I have at least four machines running Linux: a desktop, a laptop, a server, and a phone. Keeping the configuration for the four systems in line can be a challenge — for some programmes it will be the same for all machines, and for others there will be almost nothing in common between the server and phone.\n In my most naïve approach, I kept a single file in version control and made edits to the working copy without committing them, but this is unable to receive changes from upstream. Next I kept a separate file for each machine, but this meant keeping four files perfectly just out-of-sync, and programmes often had difficulty knowing which config file to use.\n The first breakthrough came when I realised I could make certain parts of my Emacs configuration dynamic:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  (setq settings \u0026#39;((\u0026#34;phobos\u0026#34; . ((mono-font-size . 20) (var-font-size . 28))) (\u0026#34;luna\u0026#34; . ((mono-font-size . 20) (var-font-size . 28))) (\u0026#34;europa\u0026#34; . ((mono-font-size . 18) (var-font-size . 24))) (\u0026#34;ceres\u0026#34; . ((mono-font-size . 10) (var-font-size . 12))))) (defun fetch-setting (setting) (cdr (assoc setting (cdr (assoc system-name settings))))) (setq doom-font (font-spec :family \u0026#34;Fira code\u0026#34; :size (fetch-setting \u0026#39;mono-font-size)))     This has its limitations. It doesn\u0026#39;t work for any programme that doesn\u0026#39;t use a programming language to define its configuration, excluding just about anything that doesn\u0026#39;t use Lisp, Vimscript, Lua, or shell scripts.\n To my knowledge, there is no reliable way to have toml, json, or yaml files perform variable substitution or read conditionals. The closest I came was to use Bash to write the machine-specific configuration in ~/.bash_profile1 when it was run by the login shell2.\n1 2 3 4 5 6 7 8  DOT=$HOME/.dotfiles CUSTOM=$DOT/i3/.i3/config.$HOSTNAME DEFAULT=$DOT/i3/.i3/config.default if [[ -f \u0026#34;$CUSTOM\u0026#34; ]]; then cat $CUSTOM \u0026gt; $DOT/i3/.i3/config else cat $DEFAULT \u0026gt; $DOT/i3/.i3/config fi     I was initially hopeful that I could use the machine-specific configuration just to append to a larger, shared configuration, but it was not to be. The files don\u0026#39;t always allow their section to be moved around on a whim, and moving a line into machine-specific configuration required one to remember to do the same for every machine. It also adds a huge amount of cruft to ~/.bash_profile, when I keep configuration for ~20 programmes this means ~150 lines of ifs and elses cluttering what should be a simple file.\n Here I got the idea for Isogeny. It does the work at the same moment, but in a Clojure script and using the brilliant Selmer3 template rendering library.\n Instead of appending, Isogeny uses substitution points in a template, which might be familiar to anyone who has used templates in front-end development.\n1 2 3 4 5 6  ... Font size: {{ font.size }} Font family: {{ font.family }} Ports: {% for port in ports %} Port: {{ port }} {% endfor %} ...     The values of the variables are provided by a context in an EDN file.\n1 2 3  {:font {:size 12 :family \u0026#34;Fira mono\u0026#34;} :ports [3355 3356]}     The user should keep a different context for each machine. They can be named something like programme.\u0026lt;HOSTNAME\u0026gt;.edn so that the correct context can easily be picked using programme.$HOSTNAME.edn2.\n The final result should be the rendered file in the correct position to be used by its programme.\n1 2 3 4 5 6 7  ... Font size: 12 Font family: Fira mono Ports: Port: 3355 Port: 3356 ...     Calls to Isogeny look like so:\n1 2 3 4  ./isogeny.clj -t foo.template \\  -c foo.context.specific.edn \\  -d foo.context.default.edn \\  -o foo.config     The default context provides for a fallback should the specific context be missing, something that is useful when something has been misconfigured or when using a new machine. It can be inconvenient to have a display manager or window manager fail to launch.\n Isogeny can help you prepare your config for use with Isogeny, it leaves the current config in place.\n1 2 3  ./isogeny.clj --prepare ~/path/to/config # =\u0026gt; ~/path/to/config.template, a copy of current config # =\u0026gt; ~/path/to/config.\u0026lt;HOSTNAME\u0026gt;.edn, an empty context to edit     In the couple of days since I wrote the first working version of Isogeny, I have had great fun coming up with new functionality and seeing just how quickly I could implement it. These include:\n  --add-tags  add custom tags to the renderer  --strict  fail when a value is missing  --context-string  provide context as a CLI option that overrides values in the file  --deep-merge  use deep-merge rather than merge when overriding  --verbose  provide detailed logging  --safe  will not edit or overwrite existing files  --multi-template  render multiple templates with a single call to Isogeny  --prepare  prepare config to be used with Isogeny  With these added features, I think that Isogeny fits the use cases of almost everyone conscious of configuration. Now my configuration setup looks like this, run on login:\n1 2 3 4 5 6 7 8  ~/bin/isogeny.clj --multi-template \\  -c ~/.dotfiles/isogeny/context.$HOSTNAME.edn \\  -d ~/.dotfiles/isogeny/context.default.edn \\  --strict --verbose --deep-merge \\  ~/.config/sway/config.template \\  ~/.config/alacritty/alacritty.yml.template \\  ~/.config/dunst/dunstrc.template \\  ~/.config/gammastep/config.ini.template     And with that, all my files are configured to this machine. Please, give it a try, submit issues and feature requests, and keep your configuration in good order.\n1 On some systems, it is ~/.profile that is sourced on login, not ~/.bash_profile.\n  2 HOSTNAME is available in Bash, HOST in Zsh, or just use $(uname -n).\n  3 Isogeny owes a great debt to Selmer, the work of Yogthos.\n    ","permalink":"http://blog.almost.education/posts/isogeny/","summary":"Isogeny makes all configuration dynamic.","title":"æ/Isogeny"},{"content":"  Clojure, like other JVM languages, excels in long-running tasks1. But I was always jealous of the languages that I\u0026#39;d used for scripting and command line tools which can\u0026#39;t wait a second for a JVM to start for each invocation. Despite its slow startup time, the JVM shines at peak throughput. Some times we want one, sometimes the other. For tasks that have a very short lifetime (~1s), we need Ahead of Time compilation.\nAOT vs. JIT   Whatever happens, the code you write is translated to machine code that is executed on the host machine. One might think that, when compiling C, this is a single step, but it is a process from preprocessor to compiler to assembler and then linker. At the end of this, all of the machine code has been produced before the programme is run.\nJIT   Not so with Java and JVM languages. When one \u0026#39;compiles\u0026#39; a JVM project, say by calling javac, one produces bytecode — not machine code. When the programme is run and the JVM is started, the JVM does the work of compiling its bytecode into machine code on an ad hoc basis as methods are called, hence the name just-in-time compilation2.\n JIT has its benefits. It can make optimisations because it knows exactly the machine it is compiling for, whereas with C the build machine will likely be different from the machine the code runs on. The JVM also has the ability to profile the code as it runs and make optimisations based on how the code is actually used. Say in the code there is are references to foo.bar(false, n) and foo.bar(true, n) but as the code is run the latter is called millions of times more often than the former. JIT compilation can see this and optimise calls to foo.bar where the first argument is true. This is the sort of information that is not available when compiling beforehand.\n  AOT   Perhaps, by now, you have guessed that the alternative is ahead-of-time compilation. Compiling ahead of time, there is no need for a JVM to run, and thus no profiling and no ad hoc compilation. The result is a programme that starts instantly and with a much smaller memory footprint (~×10).\n For two decades, there was no other way to run JVM languages except on the JVM by way of JIT. But now, with the release of GraalVM in 2019, we can now compile our JVM programmes via AOT, straight to machine code.\n    GraalVM   GraalVM, from the Old French graal meaning grail, is an Oracle project comprising:\n GraalVM Compiler, a JIT compiler for Java GraalVM Native Image, a AOT compiler for Java Truffle Language Implementation Framework, a specification for running other languages on GraalVM LLVM and Javascript runtimes  We\u0026#39;re interested in the AOT compiler. First we need a copy of GraalVM; go to https://www.graalvm.org/downloads/ and download the appropriate package, or if using Arch one install it from the AUR.\n From wherever you install external binaries (/usr/bin, ~/bin), extract the archive and set its location as an environment variable:\n1 2  tar -xzvf ~/dl/graalvm-ce-java11-linux-amd64-21.3.0.tar.gz export GRAALVM_HOME=~/bin/graalvm-ce-java11-21.3.0     This might not add Graal\u0026#39;s executables to your PATH, but they can be run using $GRAALVM_HOME/bin/... etc.. If you encounter permissions issues, you might have to run chmod +x \u0026lt;executable\u0026gt; for the file to be able to be executed.\nHello Graal   I keep all my source code in ~/src, make changes to the commands for your system. These commands create a new Clojure project.\n1 2 3  mkdir -p ~/src/hello-graal/src/hello_graal cd ~/src/hello-graal touch ./src/hello_graal/main.clj     And in main.clj create this very simple Hello World application.\n1 2 3 4 5  (ns hello-graal.main (:gen-class)) (defn -main [\u0026amp; _args] (println \u0026#34;Hello Graal!\u0026#34;))     We can use Clojure\u0026#39;s compile to compile the namespace into classfiles, as one would with javac. The bytecode in the classfiles would normally be used by the JVM, but we will use them with Graal\u0026#39;s native-image to produce an executable binary. Graal doesn\u0026#39;t explicitly support Clojure, but once Clojure is compiled to bytecode it is just the same as any other JVM language, including Java.\n1 2  mkdir classes clojure -M -e \u0026#34;(compile \u0026#39;hello-graal.main)\u0026#34;     We can write a script, compile, that contains the call to Graal\u0026#39;s native-image.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23  #!/usr/bin/env bash  if [ -z \u0026#34;$GRAALVM_HOME\u0026#34; ]; then echo \u0026#39;Please set GRAALVM_HOME\u0026#39; exit 1 fi mkdir classes clojure -M -e \u0026#34;(compile \u0026#39;hello-graal.main)\u0026#34; # Ensure Graal native-image program is installed \u0026#34;$GRAALVM_HOME/bin/gu\u0026#34; install native-image \u0026#34;$GRAALVM_HOME/bin/native-image\u0026#34; \\  -cp \u0026#34;$(clojure -Spath):classes\u0026#34; \\  -H:Name=hello-graal \\  -H:+ReportExceptionStackTraces \\  --initialize-at-build-time \\  --verbose \\  --no-fallback \\  --no-server \\  \u0026#34;-J-Xmx3g\u0026#34; \\  hello_graal.main     When this script is run it produces an executable, hello-graal. Give it a try!\n1 2 3  chmod +x compile ./compile ./hello-graal      Next steps   This is a subject I\u0026#39;d like to return to. I see great promise for the role of Clojure in creating native applications. Graal\u0026#39;s already being used by Babashka, clojure-lsp, and clj-kondo, three tools I use on a daily basis.\n Our next steps might be to add the ability to add command-line options and arguments using tools.cli. And we can read from stdin using (new java.io.BufferedReader *in*).\n1 2 3 4 5 6 7 8 9 10 11  (ns hello-graal.main (:require [clojure.tools.cli :as cli])) (def cli-options [[\u0026#34;-v\u0026#34; \u0026#34;--verbose\u0026#34; \u0026#34;Verbosity\u0026#34;]]) (defn -main [\u0026amp; args] (let [opts (cli/parse-opts args cli-options)] (doseq [ln (line-seq (new java.io.BufferedReader *in*))] ;; Use a line from input. )))     In part two I will show how to replicate some of the functionality of clj-kondo, and then implement some missing features.\n    1 Maximising Java Application Performance with GraalVM by Oleg Šelajev at GOTO 2020.\n  2  The earliest possible mention of JIT I know of is from John McCarthy of Lisp fame:\n The programmer may have selected S-functions compiled into machine language programs put into the core memory. Values of compiled functions are computed about 60 times as fast as they would if interpreted. Compilation is fast enough so that it is not necessary to punch compiled program for future use.\n — Recursive Functions of Symbolic Expressions and Their Computation by Machine, Part I, 1960\n Instead, we suspect that the earliest published work on JIT compilation was McCarthy’s [1960] LISP paper. He men- tioned compilation of functions into ma- chine language, a process fast enough that the compiler’s output needn’t be saved. This can be seen as an inevitable result of having programs and data share the same notation [McCarthy 1981].\n — John Aycock, 2003\n    ","permalink":"http://blog.almost.education/posts/clojure-cli-graal/","summary":"Clojure, like other JVM languages, excels in long-running tasks1. But I was always jealous of the languages that I\u0026#39;d used for scripting and command line tools which can\u0026#39;t wait a second for a JVM to start for each invocation. Despite its slow startup time, the JVM shines at peak throughput. Some times we want one, sometimes the other. For tasks that have a very short lifetime (~1s), we need Ahead of Time compilation.","title":"Clojure CLI apps using GraalVM"},{"content":"  I use Clojure\u0026#39;s threading macros perhaps more than I should, but I do so because they mimic the way I think about the code I write. A lisp programme is a tree and yet most of the programmes that we write are, or should be, lines of functions acting on a datastructure1 2.\nThe value of threading macros  1 2  (* 3 (+ 2 (- 10 (+ 10 (/ 2 2))))) ^     To grok this code I have to start from the bottommost leaf, in this case (/ 2 2), yet it is at the line\u0026#39;s far right contrary to where it is natural for me and most of the world3 to start reading. Conversely the same code written with a threading macro mirrors how we think about what the code is doing.\n1 2  (-\u0026gt; 2 (/ 2) (+ 10) (- 10) (+ 2) (* 3)) ^     They also force the programmer into writing simpler code because threading macros don\u0026#39;t handle trees well.\n1 2 3 4 5 6  (-\u0026gt; 2 (/ 2) (+ 10) (- (-\u0026gt; 25 (/ 5) (* 2))) (+ 2) (* 3))     What a mess. It\u0026#39;s much better to split it into two linear forms.\n1 2 3  ;; Better do this (let [x (-\u0026gt; 25 (/ 5) (* 2))] (-\u0026gt; 2 (/ 2) (+ 10) (- x) (+ 2) (* 3)))     So threading macros help make easy things simple and complex things hard4.\n  as-\u0026gt;   as-\u0026gt; allows one to use a symbol to specify where the threaded value goes in each form. It is helpful when the threaded value\u0026#39;s position in the function\u0026#39;s arguments changes. Some Clojure functions take the datastructure as the first argument, others take a function.\n1 2 3  (as-\u0026gt; (db/get id) $ (update $ :foo f x y) (map g $))      some-\u0026gt;   some-\u0026gt; works similarly to -\u0026gt;, except that evaluation of the form terminates as soon as the threaded value becomes nil. It\u0026#39;s named for some? which only returns false if its argument is nil. It is, generally, unnecessary in Clojure. Why? Because Clojure\u0026#39;s core functions, and the functions that we write, gracefully handle nil.\n1 2 3 4 5 6 7  (map + nil) ; =\u0026gt; () (assoc nil :k :v) ; =\u0026gt; {:k :v} (dissoc nil :k) ; =\u0026gt; nil (str nil) ; =\u0026gt; \u0026#34;\u0026#34; (+ nil) ; =\u0026gt; nil (- nil) ; =\u0026gt; NullPointerException, ; it\u0026#39;s not always the case     The same cannot be said for calling functions in Java. Try adding a value to a null HashMap, or .toString on a null object, and you\u0026#39;ll throw a NullPointerException.\n1 2 3 4 5 6 7 8 9  (-\u0026gt; id db/find-by-id (.put \u0026#34;foo\u0026#34; \u0026#34;bar\u0026#34;) db/save) (-\u0026gt; id db/find-by-id (assoc :id id \u0026#34;foo\u0026#34; \u0026#34;bar\u0026#34;) db/save)     If db/find-by-id returns nil, implying a missing entity, the first form will explode when it tries to .put on a null object. The second gracefully creates and saves a new entity. If we still need to deal with the Java method, we can do so by either wrapping the form in a try form, or use some-\u0026gt;.\n1 2 3 4 5 6  (if-some [save-result (some-\u0026gt; id db/find-by-id (.put \u0026#34;foo\u0026#34; \u0026#34;bar\u0026#34;) db/save)] (handle-success save-result) (handle-missing-entity id))     if-some is just like if-let, except instead of the test failing for falsy values, it fails for nil values. Equivalently, the test passes for (some? test) instead of (true? test).\n When db/find-by-id returns nil, some-\u0026gt; immediately returns nil without evaluating the remaining forms of the threading macro, .put and db/save. if-some then handles the case of a missing entity. Otherwise, as long as db/save returns any non-nil value, it is bound to save-result and (handle-success save-result) will be called, even if the result is false.\n  cond-\u0026gt;   I have found cond-\u0026gt;, named for cond, to be the biggest code-saver out of any of Clojure\u0026#39;s rarer standard library functions. Again, I use it mostly when working with Java, specifically with Builders. A Builder is one of the most common patterns you will see in object-oriented languages, it works to progressively build up an object, allowing for each field to have a default value, set fields by more convoluted means5, or verify fields before they are set6.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36  public class EnterpriseIntegrator { private String foo; private String bar; private String qux; private String quux; public EnterpriseIntegrator ( String foo, String bar, String qux, String quux) { // ...  }; public newBuilder () { return new EnterpriseIntegratorBuilder(); } } public class EnterpriseIntegratorBuilder { private String foo = \u0026#34;foo\u0026#34;; private String bar = \u0026#34;bar\u0026#34;; private String qux = \u0026#34;qux\u0026#34;; private String quux = \u0026#34;quux\u0026#34;; public EnterpriseIntegratorBuilder foo (String foo) { this.foo = foo; return this; } // ...  public EnterpriseIntegrator build () { return new EnterpriseIntegrator ( this.foo, this.bar, this.qux, this.quux); } }     Of course, if this was Clojure we could just do this:\n1 2 3  (def defaults {:foo \u0026#34;foo\u0026#34; :bar \u0026#34;bar\u0026#34; :qux \u0026#34;qux\u0026#34; :quux \u0026#34;quux\u0026#34;}) (merge defaults {:foo \u0026#34;foobar\u0026#34; :bar \u0026#34;baz\u0026#34;}) ;; =\u0026gt; {:foo \u0026#34;foobar\u0026#34; :bar \u0026#34;baz\u0026#34; :qux \u0026#34;qux\u0026#34; :quux \u0026#34;quux\u0026#34;}     But occasionally we will need to use a Java-style Builder.\n1 2 3 4 5  (-\u0026gt; (new EnterpriseIntegratorBuilder) (.foo f) (.bar b) (.qux q) (.quux qu))     This blows up in ones face if this code get called by someone who wants to use the default value and doesn\u0026#39;t want to set foo. In that case f is nil and a NullPointerException is thrown. cond-\u0026gt; is a threading macro that allows us to only evaluate a form if a predicate returns true, and can be used to avoid this style of error.\n1 2 3 4  (cond-\u0026gt; x (pred-1 f) (.foo \u0026#34;foo\u0026#34;) (pred-2 b) (.bar \u0026#34;bar\u0026#34;) (pred-3 q) (.qux \u0026#34;qux\u0026#34;))     If the predicate returns true, the next form is used as it would be in -\u0026gt;. Unlike some-\u0026gt;, if a predicate fails the macro doesn\u0026#39;t terminate, it just moves onto the next predicate.\n If (pred-2 b) is the only predicate to fail, it becomes equivalent to this:\n1 2 3  (-\u0026gt; x (.foo \u0026#34;foo\u0026#34;) (.qux \u0026#34;qux\u0026#34;))     We can use this to check that a variable is non-nil before trying to set the field on the Builder.\n1 2 3 4 5 6  (defn -\u0026gt;EnterpriseIntegrator [{:keys [foo bar baz]}] (cond-\u0026gt; (new EnterpriseIntegrator) (some? foo) (.foo foo) (some? bar) (.bar bar) (some? baz) (.baz baz) true (.build)))     And finally we call build to return the EnterpriseIntegrator.\n  Other macros   -\u0026gt;, some-\u0026gt;, and cond-\u0026gt; each have a matching macro, -\u0026gt;\u0026gt;, some-\u0026gt;\u0026gt;, and cond-\u0026gt;\u0026gt;, which inserts the threaded value as the last argument in each form. I don\u0026#39;t find them often to be of much use.\n You can see Clojure\u0026#39;s official guide on the subject here.\n  1 \u0026#34;It is better to have 100 functions operate on one data structure than to have 10 functions operate on 10 data structures.\u0026#34; — Alan Perlis, Epigrams on Programming\n  2 The Language of the System by Rich Hickey, Conj 2012. Having abandoned object-oriented languages, don\u0026#39;t recreate them in the large by building a system of components that look like objects. Instead, choose to structure your system like you structure your functional programmes, pipelines of functions.\n  3 The major exceptions being Arabic, Hebrew, and Urdu.\n  4 https://en.wikipedia.org/wiki/Chiasmus\n  5 1 2 3 4 5  public EnterpriseIntegratorBuilder setCredentials (Credentials creds) { this.username = creds.getUsername(); this.password = creds.getPassword(); return this; }      6 1 2 3 4 5 6  public EnterpriseIntegratorBuilder setTimeoutMillis (int to) { if (to \u0026gt; 0) { this.timeoutMillis = to; } // else one can use the default value or throw an exception  return this; }        ","permalink":"http://blog.almost.education/posts/clojure-threading-macros/","summary":"I use Clojure\u0026#39;s threading macros perhaps more than I should, but I do so because they mimic the way I think about the code I write. A lisp programme is a tree and yet most of the programmes that we write are, or should be, lines of functions acting on a datastructure1 2.\nThe value of threading macros  1 2  (* 3 (+ 2 (- 10 (+ 10 (/ 2 2))))) ^     To grok this code I have to start from the bottommost leaf, in this case (/ 2 2), yet it is at the line\u0026#39;s far right contrary to where it is natural for me and most of the world3 to start reading.","title":"Clojure's rarer threading macros: some-\u003e and cond-\u003e"},{"content":"  I\u0026#39;ve been writing ae/eventstore.clj, a Clojure wrapper for the EventStoreDB-Client-Java library. Nicely written, it is still \u0026gt;5k lines of your typical verbose Java and I\u0026#39;m hoping I can do more in \u0026lt;1k lines. In writing this I have stumbled upon an 8-year-old Clojure bug, which itself might stem from a JVM bug from the last millennium.\nFinding a Clojure–Java interop bug   I loath private, protected, and their ilk, much preferring to make everything public 99% of the time. Power to the consumer! Here\u0026#39;s an (abbreviated) example from the Java library. A protected base class which provided the subclass with a public method.\n1 2 3 4 5 6 7 8 9 10 11 12 13  protected class OptionsBase\u0026lt;T\u0026gt; { public T timeouts (Timeouts timeouts) { this.timeouts = timeouts; return (T)this; } } public class ReadAllOptions extends OptionsBase\u0026lt;ReadAllOptions\u0026gt; { public static ReadAllOptions get() { return new ReadAllOptions(); } }     In Java, this is perfectly legal. In Clojure:\n1 2  (-\u0026gt; (ReadAllOptions/get) (.timeouts timeouts))    1 2 3  Error in -\u0026gt;ReadAllOptions-test Uncaught exception, not in assertion error: java.lang.IllegalArgumentException: No matching method timeouts found taking 1 args for class com.eventstore.dbclient.ReadAllOptions     I get exceptions like this all the time working with Clojure–Java interop, either I\u0026#39;ve:\n called the right method on the wrong class called the wrong method on the right class called an inaccessible method  Let\u0026#39;s find out which methods ReadAllOptions provides:\n1 2 3 4 5 6 7 8 9 10  (-\u0026gt;\u0026gt; ReadAllOptions .getMethods (map str)) ; =\u0026gt; ... ; 17. \u0026#34;public java.lang.Object com.eventstore.dbclient.OptionsBase.requiresLeader()\u0026#34; ; 18. \u0026#34;public java.lang.Object com.eventstore.dbclient.OptionsBase.requiresLeader(boolean)\u0026#34; ; 19. \u0026#34;public java.lang.Object com.eventstore.dbclient.OptionsBase.timeouts(com.eventstore.dbclient.Timeouts)\u0026#34; ; 20. \u0026#34;public java.lang.Object com.eventstore.dbclient.OptionsBase.notRequireLeader()\u0026#34; ; 21. \u0026#34;public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException\u0026#34; ; ...     Look at #19, it has a public method called timeouts, and after checking (.getClass timeout) we can be sure that this call should work.\n It turns out that this is a bug that goes back to at least 2013, when it was first tracked in the Clojure Jira (#CLJ–1243) and I suspect it might be related to a 22-year-old JVM bug (#JDK–4283544).\n Well, what to do? I don\u0026#39;t think there\u0026#39;s much use in waiting for this to get fixed. Let\u0026#39;s do as hackers do and hack. Given that I\u0026#39;m fairly certain that what I want to do is legal in Java, let\u0026#39;s look at the Java interop options of which there are three levels:\n class / member accesses and the dot special form proxy, gen-class, reify writing Java    Writing Java   In this rare case, it looks like writing Java is ones only option. But I, like many other Clojure developers, was once a Java developer, and the Java needed is very simple, it is a wrapper for ReadAllOptions, so the offending methods will be called inside our Java code.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  import com.eventstore.dbclient.ReadAllOptions; import com.eventstore.dbclient.Timeouts; public class ReadAllOptionsClj { public ReadAllOptions foreign; public ReadAllOptionsClj () { this.foreign = ReadAllOptions.get(); } public ReadAllOptionsClj timeouts (Timeouts timeouts) { this.foreign.timeouts(timeouts); return this; } public ReadAllOptions build () { return this.foreign; } }     I\u0026#39;ve used a builder pattern here. This is good to call using Clojure\u0026#39;s cond-\u0026gt; threading macro. It works by evaluating a predicate, and treating the next as if in a normal thread-first macro. In the following code this makes sure that methods are only called if the argument is non-nil, the builder\u0026#39;s default value is used otherwise.\n1 2 3 4 5  (cond-\u0026gt; (new ReadAllOptionsClj) (some? timeouts) (.timeouts timeouts) ;; add many other fields to the builder ;; (some? host) (.addHost host) true (.build))     As always when calling Java from Clojure, one must import the class:\n1 2 3  (ns ... (:require [...]) (:import [ae.eventstore.j ReadAllOptionsClj]))     But before it can be used, the Java needs to be compiled.\n  Compiling Java with tools.build   Building this in Leiningen should be really simple. Lein\u0026#39;s defproject has the key :java-source-paths which can be compiled using lein javac, but this is usually unnecessary as all the usual Lein tasks will do it for you.\n I made the switch to deps.edn last year, unfortunately it won\u0026#39;t do compile Java code automatically. But this does provide one with an opportunity to learn how to use tools.build, written by Alex Miller (@puredanger). Asserting that builds are programs, we must do for ourselves what Lein would be doing.\n To deps.edn one must add an alias for the task to be performed, add any dependencies needed for that task, and the namespace containing the functions to use. Our tasks will be build, our only dependency tools.build, and our namespace build.\n1 2  {:alias {:build {io.github.clojure/tools.build {:git/tag \u0026#34;v0.6.8\u0026#34; :git/sha \u0026#34;d79ae84\u0026#34;} :ns-default build}}}     One then creates build.clj in the project\u0026#39;s root where we will start defining our build task:\n1 2  (ns build (:require [clojure.tools.build.api :as b]))     The most important subtask will be compiling our Java code, for which tools.build provides the javac function.\n1 2 3 4 5 6 7  (def class-dir \u0026#34;target/classes\u0026#34;) (def basis (b/create-basis {:project \u0026#34;deps.edn\u0026#34;})) (defn compile [_] (b/javac {:src-dirs [\u0026#34;java\u0026#34;] :class-dir class-dir :basis basis :javac-opts [\u0026#34;-source\u0026#34; \u0026#34;8\u0026#34; \u0026#34;-target\u0026#34; \u0026#34;8\u0026#34;]}))     I assume here that the Java code is within java but it might be possible to keep it as a subdirectory or src as one would with clj, cljc, and cljs.\n Running clojure -T:build compile will compile the Java source files as can be seen by looking in target/classes. Once target/classes is added to the classpath you will be ready to call the class from Clojure.\n1  {:paths [\u0026#34;src\u0026#34; \u0026#34;resources\u0026#34; \u0026#34;target/classes\u0026#34;]}      Trying gen-class?   In attempting to use gen-class to circumvent this bug, I found an even older Clojure bug! Using the builder pattern, the builder\u0026#39;s methods return itself. This allows one to use method chaining in Java, or threading macros in Clojure.\n1 2 3 4 5 6 7  Foo.newBuilder() .red() .mirrored() .short() .wearing(jacket) .build() // =\u0026gt; an instance of Foo     1 2 3 4 5 6 7 8  (-\u0026gt; Foo .newBuilder .red .mirrored .short (.wearing jacket) .build) ;; =\u0026gt; an instance of Foo     One would write the method like so, so the function makes the change to the internal state, and then returns itself.\n1 2 3 4 5 6 7 8  (gen-class :name \u0026#34;ae.ReadAllOptionsBuilder\u0026#34; :methods [[timeouts [com.eventstore.dbclient.Timeouts] ae.ReadAllOptionsBuilder]]) (defn -timeouts [this timeouts] (-\u0026gt; this .state (.timeouts timeouts)) this)     If it only were so. Ticket #CLJ-84, compile gen-class fail when class returns self, makes it clear that it is not possible for a gen-class method to return an instance of the same class. Created on 17th June 2009 by Rick Hickey, this ticket is as old as Clojure\u0026#39;s ticketing system itself. What happens if we return void instead?\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36  (ns ae.read-all-options (:import [com.eventstore.dbclient Direction Position ReadAllOptions Timeouts UserCredentials])) (gen-class :name \u0026#34;ae.eventstore.ReadAllOptionsCljTwo\u0026#34; :state state :init init :constructors {[] []} :methods [[getForeign [] com.eventstore.dbclient.ReadAllOptions] [authenticated [com.eventstore.dbclient.UserCredentials] void] [requiresLeader [boolean] void] [timeouts [com.eventstore.dbclient.Timeouts] void] [resolveLinkTos [boolean] void] [fromPosition [com.eventstore.dbclient.Position] void] [direction [com.eventstore.dbclient.Direction] void] [build [] com.eventstore.dbclient.ReadAllOptions]]) (defn -init [] [[] (ReadAllOptions/get)]) (defn -getForeign [this] (.state this)) (defn -authenticated [this credentials] (-\u0026gt; this .state (.authenticated credentials))) (defn -requiresLeader [this value] (-\u0026gt; this .state (.requiresLeader value))) (defn -timeouts [this timeouts] (-\u0026gt; this .state (.timeouts timeouts)))     Given that the methods are returning void, we have to use an abomination like this with an implicit do and explicit altering of state:\n1 2 3 4 5  (defn apply-base-options [builder {::options/keys [timeouts requires-leader?] ::keys [credentials]}] (if (some? timeouts) (.timeouts builder (-\u0026gt;Timeouts timeouts)) nil) (if (some? requires-leader?) (.requiresLeader builder requires-leader?) nil) (if (some? credentials) (.authenticated builder (-\u0026gt;UserCredentials credentials)) nil))     And AOT compile to make use of gen-class by adding a new subtask to build.clj:\n1 2 3 4 5  (defn compile-2 [_] (compile nil) ;; only needed if you haven\u0026#39;t removed the Java code (b/compile-clj {:basis basis :src-dirs [\u0026#34;src\u0026#34;] :class-dir class-dir}))     And the best thing? It doesn\u0026#39;t even work.\n1 2 3 4 5 6 7 8  java.lang.IllegalArgumentException: No matching method timeouts found taking 1 args for class com.eventstore.dbclient.ReadAllOptions No matching method timeouts found taking 1 args for class com.eventstore.dbclient.ReadAllOptions Reflector.java: 127 clojure.lang.Reflector/invokeMatchingMethod Reflector.java: 102 clojure.lang.Reflector/invokeInstanceMethod read_all_options.clj: 36 ae.read-all-options/-timeouts read_all_options.clj: 35 ae.read-all-options/-timeouts nil: -1 ae.eventstore.ReadAllOptionsCljTwo/timeouts      Other uses   I can\u0026#39;t imagine that such a setup will be useful too often, but here are a couple that come to mind:\n Java is more performant (~2×?) an existing codebase migrating to Clojure (à la strangler architecture) providing a reliable Java API using tools that require Java magic    ","permalink":"http://blog.almost.education/posts/clojure-java-bug/","summary":"Dodge a Clojure bug by using Java and tools.build","title":"An 8-year-old Clojure bug, resorting to Java"},{"content":" Macros that makes namespace aliases easy.\n https://github.com/EducatedAlmost/alias-ns.git\n Qualified keywords have ballooned in popularity since the release of spec with Clojure 1.9. And thankfully so! A creed amongst Clojurians is that maps should be open to modification, meaning that I should be able to add data to a map without worrying that it will break its consumer, and that when processing maps we shouldn\u0026#39;t remove data using something like select-keys without good reason.\n But there was a problem that occasionally (assoc m k v) would be destructive — because we were all using the same keys. Every application seemingly has its own :id, :user, :service, :credentials; and associng a new one would dissoc the previous and break whoever was waiting to consume it. With the introduction of qualified keywords, I can instead assoc :ae.bespoke/id without fear.\n Qualified, sometimes called namespaced, keywords abound in my code. For larger projects there might be up to ten namespaces to which a keyword belongs, think: :ae.bespoke.user/id, :ae.bespoke.item/id, :ae.bespoke.process/id. And Clojure allows us to use aliases, most commonly defined within (ns ... (:require [ae.bespoke.user :as user])), so the keywords can be shrunk to just ::user/id.\n I only very occasionally have a problem with this, here\u0026#39;s an example. You start developing your application in ae.bespoke.core, but decide to split user functionality into ae.bespoke.user. This works well until you want to reference a user\u0026#39;s id in core, and try ::user/id as you do in many of your other source files. It fails because core doesn\u0026#39;t require user, and if it did you would have a circular dependency because user itself requires core.\n What are the alternatives? Use :ae.bespoke.user/id instead of ::user/id. This is what I would recommend most of the time, but it has the principal drawback that when referencing this key throughout our code we must always be thinking about whether the current namespace depends upon the user namespace.\n To aleviate this aspect of cognitive load, I have created alias+ns. It\u0026#39;s a macro that allows one to alias a namespace that has not been required in the current namespace. So in ae.bespoke.user, this would be valid:\n1 2  (alias+ns \u0026#39;user \u0026#39;ae.bespoke.user) {::user/id 356}     And if using many aliases, use aliases+ns:\n1 2 3 4 5 6  (aliases+ns {\u0026#39;user \u0026#39;ae.bespoke.user \u0026#39;item \u0026#39;ae.bespoke.item \u0026#39;process \u0026#39;ae.bespoke.process}) {::user/id 356 ::item/id 9134 ::process/id 22}     You can do all this without the worry of circular dependencies. Just don\u0026#39;t try to define functions or variables in the aliased namespace, or maybe do but I haven\u0026#39;t a clue what would happen.\n I won\u0026#39;t be arrogant and claim that this is the best thing to do in all cases, or even that it is best in most cases; but I have found it to be very useful in projects with large numbers of namespaces, where it also reduces the pain of refactoring when code moves between them. I hope you find a use for it too.\n","permalink":"http://blog.almost.education/posts/alias-ns/","summary":"Macros that makes namespace aliases easy.\n https://github.com/EducatedAlmost/alias-ns.git\n Qualified keywords have ballooned in popularity since the release of spec with Clojure 1.9. And thankfully so! A creed amongst Clojurians is that maps should be open to modification, meaning that I should be able to add data to a map without worrying that it will break its consumer, and that when processing maps we shouldn\u0026#39;t remove data using something like select-keys without good reason.","title":"æ/alias+ns"},{"content":"  After reading it for over a decade, I\u0026#39;ve noticed a decline in the Guardian\u0026#39;s quality. I\u0026#39;m looking for another newspaper to read but, surprisingly, the prices of their competitors range wildly.\n In the past I\u0026#39;ve really enjoyed The Spectator and Private Eye. I would love to try the Financial Times, but at that price I\u0026#39;m more likely to pick The Telegraph.\nNewspapers   Prices are per month.\n   Guardian £0.00   Indy *   Financial Times £53.00   The Telegraph £12.99   The Times £26.00     The Indy\u0026#39;s subscription page wouldn\u0026#39;t load for me.\n  Magazines   Prices are per month.\n   New Statesman ~£10   Private Eye ~£3.00   The Economist £17.90   The Spectator £9.99     The New Statesman and Private Eye do not offer monthly subscriptions. Private Eye\u0026#39;s online content is free, this is for print.\n  ","permalink":"http://blog.almost.education/posts/uk-news-subs/","summary":"How much does a subscription cost?","title":"UK newspaper subscriptions"},{"content":" Clojure functions that build datastructures from events with dynamic perspectives.\n Rashomon is a 1950 psychological thriller film directed by Akira Kurosawa. Based on Ryunosuke Akutagawa\u0026#39;s In A Grove, it tells the story of a samurai\u0026#39;s death from the perspectives of: the bandit who killed him, his wife, the samurai himself, and finally a woodcutter, none of whom can agree at the subsequent trial.\n It was the first Japanese film to receive international acclaim, doing so after being panned by Japanese critics. From the film came the term Rashomon effect, used to describe the situation in which an event is given differing or contradictory interpretations by different observers.\n I was inspired by the film when writing Rashomon, a library for Clojure which rebuilds datastructures from events, with emphasis placed on the flexibility of perspectives, the functions that act for each event. In homage to its eponym it uses testimony to refer to the datastructure being constructed.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  (def bandit-perspectives {:ae.rashomon.event.type/foo , (fn [testimony event] (assoc testimony {:guilt? (not (:qux event))}))}) (def samurai-perspectives {:ae.rashomon.event.type/foo , (fn [testimony event] (assoc testimony {:guilt? (:qux event)}))}) (rashomon/apply-event testimony bandit-perspectives {:ae.rashomon.event/type :ae.rashomon.event.type/foo :qux :guilty}) (rashomon/build samurai-perspectives events)     By changing the set of perspectives we use when applying the event, the testimony we produce can be completely different. This functionality makes it incredibly easy to change our interpretation of events, do A/B testing where different users have different interpretations, read perspectives from configuration.\n I think this is quite novel and I\u0026#39;m excited to see what you can create with it.\n","permalink":"http://blog.almost.education/posts/rashomon/","summary":"See things from another perspective; Clojure functions that build datastructures from events.","title":"æ/Rashomon"},{"content":" This is a very useful pattern that I see rarely used. When working with systems that pass messages, it can be difficult to later reconstruct a conversation or the sequence of events. It is second nature to us to assign entity IDs1 to messages, but two other IDs will help us to understand the structure of conversations.\n One is a correlation ID. This is used to tie the conversation together. When initiating a conversation a correlation ID is created and any reply simply copies the correlation ID as its own.\n The other is a causation ID. This is used to record the immediate cause of the message, or which message this is a reply to. When replying, the original message\u0026#39;s entity ID is copied as the reply\u0026#39;s causation ID.\n Messages can be anything: commands, entity events, user input, user data, system events.\n I\u0026#39;ve displayed them in order and used integer IDs instead of UUIDs2 only for readability\u0026#39;s sake. To retrieve the conversation we can query our database for all messages with the correlation ID 547, and sort them into a tree using their entity and causation IDs.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29  {::id/corr 547 ::id/caus nil ::id/entity 901 ::content \u0026#34;Whose motorcycle is this?\u0026#34;} {::id/corr 547 ::id/caus 901 ::id/entity 829 ::content \u0026#34;It\u0026#39;s a chopper, baby.\u0026#34;} {::id/corr 547 ::id/caus 829 ::id/entity 489 ::content \u0026#34;Whose chopper is this?\u0026#34;} {::id/corr 547 ::id/caus 489 ::id/entity 122 ::content \u0026#34;It\u0026#39;s Zed\u0026#39;s.\u0026#34;} {::id/corr 547 ::id/caus 122 ::id/entity 004 ::content \u0026#34;Who\u0026#39;s Zed?\u0026#34;} {::id/corr 547 ::id/caus 004 ::id/entity 675 ::content \u0026#34;Zed\u0026#39;s dead, baby. Zed\u0026#39;s dead.\u0026#34;}     This is useful because it allows us to find the causes of downstream issues. In a previous project I worked on, we were consuming data provided by third parties, which would occasionally contain mistakes. If we found that a user of ours had become a multi-billionaire overnight, we could check the causation ID of the responsible event which would direct us to the source file that contained the data.\n An advanced form of this pattern allows each message to have several correlation and causation IDs. An event\u0026#39;s correlation IDs could point to not just the file that was the source of the data, but also the particular line of the CSV, and the import job. In a risk management service, the warning message can have as its causation IDs all the IDs of the offers that contribute to the risky position.\n1 2 3 4 5 6 7 8 9 10  {::id/correlations [#uuid \u0026#34;15b797d2-7cbd-4295-89da-d2c94e49832a\u0026#34; ;; the source file #uuid \u0026#34;c991a43c-214e-4d77-b1b1-06cbe1bb51e9\u0026#34; ;; the particular line #uuid \u0026#34;75f65ec9-1441-4ac6-a909-eceb30f9cce1\u0026#34; ;; the import job ] ::id/causations [#uuid \u0026#34;67bdf0d6-4d5e-4c0d-a840-8732e94a78a8\u0026#34; ;; the IDs of current positions #uuid \u0026#34;bab99163-54e4-4350-9356-b7bd18ed9ed2\u0026#34; #uuid \u0026#34;2fe68d11-9434-470b-8caa-64b07ecb9d26\u0026#34; #uuid \u0026#34;b97bf998-dab6-45bb-8dde-163c947ad0d5\u0026#34;]}     This necessarily complicates the process of finding immediate and ultimate causes of effects so is only recommended for situations where one is certain it will help.\n1 An entity ID might also be called a message ID.\n  2 A UUID is a universally unique identifier, meaning that it can be generated without fear that it might conflict with any already extant identifier. To use them in Clojure, I use the clj-uuid library.\n1 2  (require \u0026#39;[clj-uuid :as uuid]) (uuid/v4)        ","permalink":"http://blog.almost.education/posts/corr-caus-ids/","summary":"This is a very useful pattern that I see rarely used. When working with systems that pass messages, it can be difficult to later reconstruct a conversation or the sequence of events. It is second nature to us to assign entity IDs1 to messages, but two other IDs will help us to understand the structure of conversations.\n One is a correlation ID. This is used to tie the conversation together.","title":"Correlation and causation IDs"},{"content":"  This article is in the process of being written.\nIntroduction   State isn\u0026#39;t stored. We rebuild it every time we need to query or do something to it. It has its drawbacks, but it does allow us to do things that would be impossible otherwise. We can view out system\u0026#39;s history with new perspectives, or add in missed past events. Our view of the past is necessarily wrong for any complex system and yet we design systems that lack any way to account for that.\n  My projects   I\u0026#39;ve worked a fair bit with event sourcing:\n Rashomon (GitHub) Demesne (GitHub) Eventstore.clj (GitHub)  All articles with the \u0026#39;event sourcing\u0026#39; tag\n  History   Greg Young Event Store DB\n  An event store   Rebuilding from known states   Reverting   Diagnosing   Reinterpreting   Could be useful for A/B testing Loading from a configuration service Accepting configuration from a user (SAAS)\n Useful when? The state of an aggregate is tied up with its history\n Example\n Deactivating accounts after a period of inactivity, client requests changes to the account. Developers have to make the change, try and track down the accounts that were affected. How do you do that? Do you really have those logs? Can you use them to change your DB? Will you not accidentally reactivate someone who really shouldn\u0026#39;t be? In the meantime, you have clients who\u0026#39;ve tried to perform actions on their account but were rejected because their account was deactivated. Your operations team are spending their time finding the details of the failed actions to retry it. Why not just reinterpret the attempt in the new context of an active account?\n Can I come up with a more human-centred analogy?\n Events mean different things in different contexts.\n What\u0026#39;s the difference between an event and a command? Commands can be rejected? Is this actually the distinction?\n Where is event sourcing inappropriate? Simple domains. Where rebuilding the domain is prohibitively expensive. When the team don\u0026#39;t understand it.\n1 2 3 4 5  account.created account.deactivated.inactivity user.payment.requested user.payment.declined account.address.requested     We can change our perspectives to ignore deactivations that happen for bad reasons. In the new light where we ignore account.deactivated.inactivity if it lists too short an inactivity period, the user is now active in the context of subsequent events. We would not want to reinterpret the payment requests however. Thankfully, these events, if stored in the user\u0026#39;s stream of events at all, are just links to events in the Payments aggregate or domain. Loading the Account aggregate, and it being active will not retrigger these payments, thankfully.\n Whilst old context, address didn\u0026#39;t change\n  Drawbacks and difficulties   Related patterns   Correlation and causation IDs\n  Software   Event Store DB\n Kafka\n  ","permalink":"http://blog.almost.education/posts/event-sourcing/","summary":"This article is in the process of being written.\nIntroduction   State isn\u0026#39;t stored. We rebuild it every time we need to query or do something to it. It has its drawbacks, but it does allow us to do things that would be impossible otherwise. We can view out system\u0026#39;s history with new perspectives, or add in missed past events. Our view of the past is necessarily wrong for any complex system and yet we design systems that lack any way to account for that.","title":"Event Sourcing"},{"content":"  An example of domain-driven design, CQRS, and event sourcing, in Clojure.\n https://github.com/EducatedAlmost/demesne\n See also my post on event sourcing.\n There\u0026#39;s a maxim1 within physics that something is not understood until it can be taught — I think a similar similar maxim holds in software development; one doesn\u0026#39;t understand a pattern until one can implement it.\nDemesne   Under feudalism, a demesne /dɪˈmeɪn/ was all the land owned by the lord of the manor. The domain of domain-driven design is the larger context in which the software is run. Demesne imagines a warehouse of named item lines; which can be searched for, have instances checked in and out, be deactivated and reactivated, and be renamed.\n I\u0026#39;ll be talking about domain-driven design, CQRS, and event sourcing. What do these mean?\n  CQRS   Command Query Responsibility Segregation divorces the model used for instructions to an application, commands, from that used in requests for information, queries. It derives from Command Query separation, the idea that commands should not act as queries, and queries should not change state, and contrasts clearly to a common pattern where to update the state of an entity, its state is provided.\n There are some benefits from taking this approach. Commands can mimic real-world actions of the domain. Those calling aggregate behaviours are decoupled from the aggregate implementation. And this gives us flexibility in how we choose to store our state.\n Demesne has yet to implement the query side of the application, but it will be a web UI that will display the state of its entities and allow actions to be taken. But crucially, when actions are taken this will send commands to the HTTP endpoint, not update the state directly.\n  Event sourcing   Event sourcing a datastructure is to not store its state, but an ordered collection of the events that have occurred to it either from a known former state or from its conception. It is useful in complex domains, especially those where will might be interested in an entity\u0026#39;s history, something that would be hidden in logs, obscure database fields, or simply lost in a standard application.\n To rebuild an entity\u0026#39;s current state, we load the entity\u0026#39;s events, and progressively apply them culminating in the entity as it is. To see an example of this in Clojure, see my project Rashomon (GitHub).\n  Domain-driven design   Domain-driven design puts the language and lexicon at the centre of the development process. It tells us that to effectively develop software within a domain, it is required of us to understand the domain and its processes, with a particular emphasis on the creation of an ubiquitous language, a shared language between developer and business person, user, domain expert.\n This contrasts with a style of thinking which is common amongst developers. There is an idealism about creating things afresh, rather than working with what is there already. If we think that we can create a new and better lexicon, in isolated cases we might be right, but those who use this language every day will have a greater knowledge of it and the nuances it involves. Imagine the monstrosity that would be involved if we asked the marketing department to name our functions—why should we determine the language of the business side? The language within our programs has a habit of leaking out, APIs, requests of users, error messages — why should this conflict with the language they already know?\n Conway\u0026#39;s law states that a team which designs a system will create one that matches the structure of the team. In the case of development, it means that the code mimics the development team. Let us be aware of this and consciously work to create a system that mimics the domain instead.\n  But do I know enough to implement it?   For two years I worked on a team that used CQRS, ES, and DDD. And yet my team lead wrote a library with abstracted many of the details and whilst I worked on every part of the system I have as yet never before created it from scratch. This project is a challenge to myself to prove that I know what I think I know, and it has been successful one.\n  1 The idea originates with Ernest Rutherford who is often quoted as saying that a scientific discovery has no merit until it can be explained to a barmaid.\n    ","permalink":"http://blog.almost.education/posts/demesne/","summary":"You don\u0026#39;t understand a pattern until you can implement it — domain-driven design, CQRS, event sourcing.","title":"æ/Demesne"},{"content":" An Emacs function that tells you how long it takes to read things.\n https://github.com/EducatedAlmost/read-time.el\n For a short while I was recording educational videos and audiobooks from scripts written in Emacs. A key piece of information I needed but didn\u0026#39;t have access to was the time it would take to read these when recording. Emacs does provide the useful count-words function, but there was no read-time.\n Reading speeds average around 5 words per second, dropping to 3 for careful speech, and rising above ten for speed readers. For small word counts one may easily divide the word count by ones speed to find the reading time, but it is not easy for larger word counts.\n read-time does it for you. Called interactively, it returns the time to read the whole buffer or the region.\n1 2  (read-time (point min) (point max)) ;; =\u0026gt; 14 seconds     And one may specify a reading speed by setting read-time-words-per-sec, or by providing a third argument.\n1 2  (read-time (point min) (point max) 10) ;; =\u0026gt; 24 minutes 10 seconds     I hope you find the package useful!\n","permalink":"http://blog.almost.education/posts/read-time-el/","summary":"An Emacs function that tells you how long it takes to read things.","title":"æ/read-time.el"},{"content":" Have you ever been unsatisfied with the way that dired1 lists your files? Ever wished it wouldn\u0026#39;t show you the group and owner for every file despite them all being exactly the same? Want to get those directories out of the way of your files?\n … enter dired-listing-switches.\n The first time I saw this variable set in another person\u0026#39;s init.el I thought it must be a kind of magic. Mine looks like this:\n1  (setq dired-listing-switches \u0026#34;-aBGhl --group-directories-first\u0026#34;)     The trick is, and I would have realised this if I knew how to look up the documentation of Emacs variables2, that these are flags that are passed to ls. It makes sense that Emacs would delegate to another tool, it\u0026#39;s part of the UNIX philosophy3 to trust tasks to other tools rather than do them oneself.\n What flags does ls take? A lot. ls --help has 120 lines; these are the options you\u0026#39;re most likely to want to try:\n -l is the only flag that is required. It prints a number of details for each file in a list, instead of the default of ls, a grid.\n  -a, --all  show all files, don\u0026#39;t ignore files starting with .  -A, --almost-all  like -a, but it does ignore the files . and ..  -B, --ignore-backups  show all files, don\u0026#39;t ignore files starting with .  -G, --no-group  don\u0026#39;t print group names  --group-directories-first  directories are listed first  -h, --human-readable  present sizes of files like 1K, 4M, 12G  -I, --ignore=PATTERN  ignores PATTERN, unless -a or -A is set  -r, --reverse  list in reverse order  -S  sort by file size  --sort=WORD  sort by none, size, time, version, extension  -t  sort by time  --time=WORD  the definition of time, access, ctime (change), birth  -U  do not sort  -X  sort alphabetically by file extension  As well as these, there are a couple of other interesting switches which are either unusable or unhelpful for Emacs and dired, but might be useful when using ls elsewhere:\n  -R, --recursive  list the directory and all subdirectories recursively  -x  ls usually lists down and then across, this transposes that  Add this to your init.el, .spacemacs, or config.el:\n1  (setq dired-listing-switches \u0026#34;-aBGhl --group-directories-first\u0026#34;)    1 dired: directory editor\n  2 Try calling describe-variable with C-h v.\n  3 Wikipedia — an approach to software development that favours small modular components to monoliths; sometimes stated — \u0026#39;do one thing and do it well\u0026#39;. Whether Emacs in general follows this philosophy is a matter of debate.\n    ","permalink":"http://blog.almost.education/posts/dired-listing-switches/","summary":"Have you ever been unsatisfied with the way that dired1 lists your files? Ever wished it wouldn\u0026#39;t show you the group and owner for every file despite them all being exactly the same? Want to get those directories out of the way of your files?\n … enter dired-listing-switches.\n The first time I saw this variable set in another person\u0026#39;s init.el I thought it must be a kind of magic.","title":"dired-listing-switches and ls"},{"content":"  I\u0026#39;ve used Emacs for five years now. Before that I was in Vim, but moved to Emacs with Evil, then Spacemacs, and now Doom Emacs. I made the switch initially for Org and I know that if ever I was to move to another editor I could replicate everything except for Emac\u0026#39;s Org-mode integration.\n I love to use it for everything — when I remember that the logs needs chopping, when I find a recipe I\u0026#39;d like to cook, when at work I find a bug that needs fixing — it all goes into org-mode. It\u0026#39;s fair to say that I wouldn\u0026#39;t want it to fall into the wrong hands, whether that be a criminal, my employer, my clients, or anyone.\nThe basic setup   The most common setup for org-mode is to have a single directory, org-directory say ~/org, and keep this information in files like:\n ~/org/garden.org ~/org/recipes.org ~/org/work.org  The org-directory can then be placed under version control (or using rsync, Dropbox, or similar) kept up to date with ones org files elsewhere.\n  What\u0026#39;s the problem?   All\u0026#39;s good? The problem comes from having ones personal files mixed with another\u0026#39;s. Through the course of a sprint you will hopefully be accumulating details to raise in the sprint retrospective. Whilst working on stories, you\u0026#39;ll likely want to make notes on what you learn without leaving your editor. These, and a bunch of other activities will lead to your org repository becoming tainted with information which you technically don\u0026#39;t own, or could get you into trouble if it leaked. For this reason, a client or employer might object to the information you put into work.org leaving their machines.\n The reverse problem also exists. If one is looking for a new job, one might not want ones current employer to know the details of any offers one has received. If you take on a new client, you will not want to allow them access to all your information on your other client.\n And yet this is all information you want to keep inside Org. It\u0026#39;s a key insight of David Allen\u0026#39;s GTD that one must have a single store lest one be left thinking \u0026#39;where did I put that…\u0026#39; or \u0026#39;I could swear I had something to do tomorrow…\u0026#39; and be unsure of where that information lives — in an email, a scrap of paper, or nowhere.\n The solution is to keep this confidential information in a separate repository. Now this would seem to contradict my previous statement, but it doesn\u0026#39;t have to. Done this way it almost works by default.\n I must be clear that nothing in this article will, nor is it designed to, keep your files completely private. When using a machine that is not under ones complete control one must assume that all credentials have become accessible by another. And if they were to acquire your git credentials when accessing one repository, they will be able to acquire another.\n  First steps   One will keep ones org files in a few different directories:\n  ~/org/private  for ones personal files  ~/org/client-acme  for org files related to the client Acme  ~/org/client-newco  for org files related to the client NewCo  The files that are neither private to oneself nor anyone else can be kept in ~/org just like before. The one caveat is that one might want to create a new git repo if one has previously committed confidential information, or one can just remove the offending files from the git repo\u0026#39;s history.\n.gitignore and submodules   Initially, I added the child directories to ~/org/.gitignore.\n1 2 3 4 5  # .gitignore private client client-*     This works fine, but one can also use git submodules. They allow one to have nested git repositories without files being tracked by both repositories with the added bonus that one can easily update all submodules from their remotes, and create them automatically when the parent is cloned.\n This makes use of the --git-dir and --work-tree options to run git commands in another repo. Change NEW_ORG_DIR to whatever you wish to name your new repository.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  cd ~/org NEW_ORG_DIR=client-newco # Make the new git repo mkdir $NEW_ORG_DIR git --git-dir=$NEW_ORG_DIR/.git init # We must make a commit before it can be added as a submodule touch $NEW_ORG_DIR/foo.org git --git-dir=$NEW_ORG_DIR/.git --work-tree=$NEW_ORG_DIR add foo.org git --git-dir=$NEW_ORG_DIR/.git --work-tree=$NEW_ORG_DIR commit -m \u0026#34;$(echo $NEW_ORG_DIR)initial commit.\u0026#34; # Add the submodule, and commit to the parent repo git submodule add ./$NEW_ORG_DIR git commit -m \u0026#34;Add $(echo $NEW_ORG_DIR)as a submodule.\u0026#34;     In the case that you are doing this for an existing repository that already has commits, one just has to remove the directory from .gitignore and run the last two commands, git submodule add and git commit.\n From this point on, one can treat the two as separate repos, except for the fact that git allows one to update all the submodules from the parent with git submodule update, and the submodules can be fetched when the parent is cloned with git clone --recurse-submodules \u0026lt;url\u0026gt;. Recursing submodules should be avoided if one doesn\u0026#39;t want to download private repositories to an untrusted machine. Instead, specific submodules can be retrieved using git submodule init and then git submodule update.\n    What doesn\u0026#39;t work?  Agenda   Org-mode builds an agenda from the files in the top level of whichever directories are provided. Our new files won\u0026#39;t be under ~/org, but ~/org/private ~/org/client, so we need to add them to the org-agenda-files list.\n1 2 3 4 5  (setq org-private-directory \u0026#34;~/org/private\u0026#34;) (setq org-client-directory \u0026#34;~/org/client\u0026#34;) (setq org-agenda-files (list org-directory org-private-directory org-client-directory)     In the case that you have many clients or prefer to not specify the names of your client in your dotfiles (like me, because my dotfiles are open source) you can use a regular expression to find the directories that match and add them to org-agenda-files.\n1 2 3 4 5  (setq org-private-directory \u0026#34;~/org/private\u0026#34;) (setq org-agenda-files (append (list org-directory org-private-directory) (directory-files org-directory \u0026#39;full (rx \u0026#34;client-\u0026#34;))))     Other setups can be used by adding directories more directory-files forms to the list. For simpler setups, it is possible to use org-agenda-file-regexp, but the necessary regular expression will quickly become extremely complex for even mildly complicated setups, such as nested directories.\n  Capture   Roughly half of the information I keep in org enters through org-capture. On calling org-capture, the user is asked to choose a template and then store some piece of information in that template. The entered information will be stored in an org file.\n I have found it to be invaluable in my pursuit of not being distracted. It ameliorates the feeling that if I don\u0026#39;t read this article know, I won\u0026#39;t ever. Or that this brilliant idea will be lost if I don\u0026#39;t indulge it now. Capture gives me an out, lets me revisit it later, at which point there\u0026#39;s only a 50% it will seem like a good idea anyway. This encourages a continuity of concentration, the previous task is still within ones short-term memory. There is no need to go back and refresh oneself having spent ten minutes reading the article.\n Most users will just have a single file as the target of org-capture, but that might not work for you. If one wants to capture confidential information, one does not want that to be stored in a target file that is kept outside of the confidential directory we just set up.\n1 2 3 4  (setq org-capture-templates `((\u0026#34;c\u0026#34; \u0026#34;Capture\u0026#34; entry (file ,org-default-notes-file) \u0026#34;* REFILE %?\u0026#34;)))     REFILE is one of my todo states, it shows that an item needs to be moved, scheduled, and possibly have more information added.\n We can change the target by changing the fourth element of the list. As well as (file ...) there are a number of other possible capture target, the three most useful being:\n1 2 3 4 5 6 7 8  (file \u0026#34;path/to/file\u0026#34;) Text will be placed at the beginning or end of that file (id \u0026#34;id of existing Org entry\u0026#34;) File as child of this entry, or in the body of the entry (file+headline \u0026#34;path/to/file\u0026#34; \u0026#34;node headline\u0026#34;) Fast configuration if the target heading is unique in the file     For more information see the org-mode documentation on template elements. We can thus add additional templates, and when capturing something one must just be sure to pick the correct template. Trying to record the note on a machine without the private repository will fail, as it should.\n1 2 3 4 5 6 7 8 9 10  (setq org-capture-templates `((\u0026#34;c\u0026#34; \u0026#34;Capture\u0026#34; entry (file ,org-default-notes-file) \u0026#34;* REFILE %?\u0026#34;) (\u0026#34;n\u0026#34; \u0026#34;NewCo capture\u0026#34; entry (file \u0026#34;~/org/client-newco/refile.org\u0026#34;) \u0026#34;* REFILE %?\u0026#34;) (\u0026#34;a\u0026#34; \u0026#34;Client-A capture\u0026#34; entry (file+headline \u0026#34;~/org/client-a/work.org\u0026#34; \u0026#34;Refile\u0026#34;) \u0026#34;* REFILE %?\u0026#34;)))        Closing thoughts   The use of git to synchronise org on multiple machines can be awkward. With the amount of information that enters and exits an org system, there is no hope of having meaningful commits or commit messages. It is exceedingly rare that you would use some of git\u0026#39;s features like branching unless one uses separate branches for each machine. But there are also some things in its favour, file history occasionally comes in handy, and it\u0026#39;s easily installable on just about any system. Otherwise, one can use Dropbox, WebDAV, Syncthing, or whatever tool you have at hand.\n  ","permalink":"http://blog.almost.education/posts/private-org-dirs/","summary":"Org directories made private.","title":"Creating private org directories"},{"content":"  I will update this post as events unfold.\n In a previous post, I explained how I set out to test the Baader–Meinhof phenomenon using a randomly chosen set of five topics which I would look out for to determine an average time until they were seen again.\n Subconscious seeking?\nEvents   \u0026lt;2021-10-23 Sat 22:05\u0026gt; — Looking for more topics to extend the group to 10 or 15, the first I found that I had heard of already was… a Robbie Williams album. What on Earth… This happened just hours after Robbie Williams had been selected as one of the five original topics.\n \u0026lt;2021-11-01 Mon 16:42\u0026gt; — I heard Robbie Williams again whilst watching Mid Morning Matters S02E05 or E06?\n \u0026lt;2021-11-04 Thu 21:30\u0026gt; — Hampton Court Palace, Wolf Hall\n \u0026lt;2021-11-05 Fri 14:14\u0026gt; — https://en.wikipedia.org/wiki/Royal_Field_Artillery Looking for ancestors, I found one who died during World War I fighting in the Royal Field Artillery.\n  Other   ","permalink":"http://blog.almost.education/posts/baader-meinhof-2/","summary":"I will update this post as events unfold.\n In a previous post, I explained how I set out to test the Baader–Meinhof phenomenon using a randomly chosen set of five topics which I would look out for to determine an average time until they were seen again.\n Subconscious seeking?\nEvents   \u0026lt;2021-10-23 Sat 22:05\u0026gt; — Looking for more topics to extend the group to 10 or 15, the first I found that I had heard of already was… a Robbie Williams album.","title":"Revisiting the Baader–Meinhof phenomenon"},{"content":"  I think it\u0026#39;s fair to say that developers are divided on the issue of strong type systems. A list of the most popular programming languages contains a balance of those with (Java, C++) and without it (Python, Javascript). After two years of working almost exclusively with dynamic typing, I am occasionally tempted back to the dark side and for some time I have some fun until I stumble upon one of the edge cases where type systems get messy.\nNaïveté   I needed to create a repository that could persist objects in JSON form. A repository has two public methods, get and save. Imagine, we only wanted to be able to store ints in our repository, and reference them with a String key:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  public interface Repository { void save (String key, int value); int get (String key); } public class IntRepository implements Repository { void save (String key, int value) { return; } public int get (String key) { return 3; } }     Obviously, this class isn\u0026#39;t doing a useful job — it\u0026#39;s left to the reader to actually save these values and then retrieve them. What\u0026#39;s interesting is how we can make this Repository generic. If we wanted a Repository that could store bytes, or Strings, or any other type, we would need to create a new class for each. However, using Java\u0026#39;s generics, we can create one class that\u0026#39;s able to act as a Repository for all objects, while a single instance of the repository will store only a single type, and guarantee a strong type when retrieving things from the repository.\n  Generics  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  public interface Repository \u0026lt;T\u0026gt; { void save (String key, T value); // T get (String key); } public class RepositoryImpl \u0026lt;T\u0026gt; implements Repository \u0026lt;T\u0026gt; { public void save (String key, T value) { return; } // public T get (String key) {  // return;  // } }     I\u0026#39;ve commented out our get method as this won\u0026#39;t currently compile. We need to find a way to return something of type T. It turns out that we can just cast.\n1 2 3  public T get (String key) { return (T) \u0026#34;Hello, world\u0026#34;; }     But this fails if T is something that our result cannot be casted to. In my case, I was storing my objects in JSON form in a Postgres database. Using Jackson\u0026#39;s object mapper, any Java object can be converted into JSON.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21  public class RepositoryImpl \u0026lt;T\u0026gt; implements Repository \u0026lt;T\u0026gt; { private ObjectMapper mapper; public RepositoryImpl () { this.mapper = new ObjectMapper(); } public void save (String key, T value) { String jsonAsString = mapper.writeValueAsString(value); // persist the String  return; } public T get (String key) { // retreive the string  String jsonAsString; return (T) mapper.readValue(jsonAsString, T.class); } }     This looks like it\u0026#39;s going to be perfect… until you compile.\n1  cannot select from a type variable     It seems that T.class is a problem. It looks ugly but for the time being we can pass the Class into the object within the constructor. I\u0026#39;ve added exception handling but this is not necessarily how you would like to do it. You probably want the methods to throw exceptions, but because the exception throw declarations would need to be added to the interface\u0026#39;s methods, it\u0026#39;s might be best to define a custom exception type, like RepositorySavingException, so that the interface doesn\u0026#39;t contain a reference to the implementation\u0026#39;s JsonProcessingException. This leaves the interface free of any details of the implementation so that it is reusable for any other implementation that wants to use it.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32  import com.fasterxml.jackson.databind.ObjectMapper; import com.fasterxml.jackson.core.JsonProcessingException; import java.io.IOException; public class RepositoryImpl \u0026lt;T\u0026gt; implements Repository \u0026lt;T\u0026gt; { private ObjectMapper mapper; private Class clazz; public RepositoryImpl (Class clazz) { this.clazz = clazz; this.mapper = new ObjectMapper(); } public void save (String key, T value) { try { String jsonAsString = mapper.writeValueAsString(value); // persist the String  } catch (JsonProcessingException jpe) {} return; } public T get (String key) { // retreive the string  String jsonAsString = \u0026#34;\u0026#34;; try { return (T) mapper.readValue(jsonAsString, clazz); } catch (IOException ioe) { return null; } } }     This is looking pretty good, but will only let us specify the class. What if we want a repository of List\u0026lt;String\u0026gt;? The repo will store Lists, and return Lists, with no guarantee that those Lists contain Strings. Thankfully, TypeReferences give us a deeper understanding than Classes. Casting to T is now superfluous.\n  TypeReference  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  import com.fasterxml.jackson.core.type.TypeReference; private ObjectMapper mapper; private TypeReference type; public RepositoryImpl (TypeReference type) { this.type = new TypeReference\u0026lt;T\u0026gt;(){}; this.mapper = new ObjectMapper(); } public T get (String key) { // retreive the string  String jsonAsString = \u0026#34;\u0026#34;; try { return mapper.readValue(jsonAsString, type); } catch (IOException ioe) { return null; } }     And this is how we can use it.\n1 2 3 4 5  TypeReference\u0026lt;String\u0026gt; type = new TypeReference\u0026lt;String\u0026gt;(){}; Repository\u0026lt;String\u0026gt; repo = new RepositoryImpl\u0026lt;String\u0026gt;(type); repo.save(\u0026#34;3\u0026#34;, \u0026#34;three\u0026#34;); String str = repo.get(\u0026#34;3\u0026#34;);     It\u0026#39;s not nice that we have to specify the type twice. We can remove this by generating the TypeReference inside the constructor.\n1 2 3 4 5 6 7 8 9  public RepositoryImpl () { this.type = new TypeReference\u0026lt;T\u0026gt;(){}; this.mapper = new ObjectMapper(); } Repository\u0026lt;String\u0026gt; repo = new RepositoryImpl\u0026lt;String\u0026gt;(); repo.save(\u0026#34;3\u0026#34;, \u0026#34;three\u0026#34;); String str = repo.get(\u0026#34;3\u0026#34;);      An exercise for the reader   In this article, I have shown how to genericise the objects that are stored within the repository, but we are still bound to using Strings as our keys. Try introducing a second generic variable to act as the key of our Repository.\n  ","permalink":"http://blog.almost.education/posts/serialising-java-generics/","summary":"Serialising and deserialising with Java generics and TypeReferences.","title":"Serialising with Java generics"},{"content":" The Baader–Meinhof group   The Baader–Meinhof Group, also known as the Red Army Faction, or Rote Armee Fraktion in German, was a West German far-left militant organisation active from the 1970s until the end of the century. The Faction were widely considered to be a terrorist organisation and received funding from the East German Stasi and other Warsaw Pact countries, yet it sided with China in the Sino–Soviet split.\n Whilst they were better known as the RAF, the name Baader–Meinhof comes from the names of two of its most important members, Andreas Baader and Ulrike Meinhof.\n  The Baader–Meinhof phenomenon   Also known as the frequency illusion. After noticing something for the first time, there is a tendency to notice it more often leading someone to believe it has a high frequency.\n Attention bias, noticing things that are salient to us Confirmation bias, looking for things that confirm our beliefs and disregarding the rest  Confirmation bias, when capitalism does fall, which one day it must, communists around the world will be ready to say \u0026#34;SEEEE!!! Karl Marx was right!!!\u0026#34;, regardless of the failure of Marxism to explain any economic behaviour in the 150 years since its birth. When one fails to make any specific prediction, one can never be wrong.\n  Putting it to the test   I used Wikipedia\u0026#39;s random article function to select the foci of the test.\n Hampton Court Palace Robbie Williams James B Hartle Catholic Church in China Royal Artillery  They already seem strangely salient to me. Three items are British (I\u0026#39;m British), one is a physicist (I was once a physicist), and the other is the Catholic Church in China (I was raised Catholic and am learning Chinese). Is this due to the selection criteria? Is this a tautology?\n If I found an item that was too specific, I might choose a parent of that item. For example, it was actually a particular regiment of the Royal Artillery that I was sent.\n  Poisson distribution   How can we analyse this mathematically?\n What are the characteristics of something that is described by a Poisson distribution?\n Multiple entities Each independent Each with a time-independent chance of experiencing an event  Where \\(X\\) is the number of events in a given interval, \\(\\lambda\\) is the mean number of events in the interval, and \\(P(X=x)\\) is the probability of \\(X\\) events in the interval:\n \\begin{equation} P(X=x) = e^{-\\lambda} \\frac{\\lambda^x}{x!} \\end{equation}\n  Next time   I will be keeping track of the occurrence of these five topics, after which which we can estimate things like \\(\\lambda\\), and writing about them in a follow up post.\n  ","permalink":"http://blog.almost.education/posts/baader-meinhof/","summary":"Why do I keep seeing certain things again and again?","title":"Testing the Baader–Meinhof phenomenon"},{"content":"  Use DuckDuckGo\u0026#39;s !Bangs from the comfort of Emacs!\n https://github.com/EducatedAlmost/bang.el\n I use DuckDuckGo. Its become popular for its emphasis on user privacy in contrast to the giant of the market, Google, who it seems every six months is implicated in unethical behaviour. But honestly, I use DuckDuckGo because it looks nicer. Search for something in Google (bang \u0026#34;g\u0026#34; \u0026#34;foo\u0026#34;) and as well as the expected search results, one is shown \u0026#39;people also ask\u0026#39;, top news stories, video thumbnails from the Foo Fighters YouTube channel, and a summary of their latest tweets. When one expects a uniform list of simple search results, one is instead shown a noisy list of varying components.\nBang   And yet I\u0026#39;ve ended up using DDG for something almost unrelated, Bang. If you search DDG for !x foo, it delegates that search to the website represented by the Bang prefix x and searches it for foo. For example, you might want to search for the bang.el GitHub page, !gh bang.el, or Wikipedia for Emacs, !w Emacs, see here for a list of prefixes. Instead of going to the website\u0026#39;s homepage, and then searching, Bang takes you straight to the results page. Called without a term, the Bang will usually take you to the homepage. Without a prefix, it takes you to DGG\u0026#39;s first result. If DDG is your browser\u0026#39;s default search engine this becomes really fast.\n By my estimates, Bang shaves 10–30 seconds off every search, something that I do 10–100 times every day. By the reasoning of this classic xkcd comic, this is exactly the sort of task we should be making more efficient.\n  Over five years, 15 seconds saved 30 times every day nets us a total of 10 days! (bang \u0026#34;wa\u0026#34; \u0026#34;15 seconds * 30 * 365 * 5\u0026#34;)\n Another key to greater productivity is cutting out what might disrupt ones flow. If I see the Wikipedia homepage, there\u0026#39;s a 50% chance that three hours later I\u0026#39;ll have 30 tabs open, and my previous work will be long forgotten. Bang takes me straight to the page I want, after which I can just close the browser.\n  Examples    !gh  GitHub repositories  !clj  ClojureDocs  !xiny  Learn X in Y minutes, a introduction to any programming language  !pm  PubMed, biomedical papers  !arx  arXiv, physics papers  !wa  WolframAlpha, computational knowledge engine  !ma  MemoryAlpha, the Star Trek Wiki  !awoiaf  A Wiki of Ice and Fire    What is missing from Bang?   There are four types of Bangs that are disallowed:\n those for illegal websites those for websites with explicit content those that would be overly niche those that would violate the website\u0026#39;s terms of service    bang.el   bang.el takes this a step further. Not only does one get to skip the process of going to the website, now one can use the Bang from Emacs itself.\nbrowse-url   All bang.el functions ultimately call browse-url. To choose which program is used by Emacs to open the link, one can edit the values of browse-url-browser-function and browse-url-generic-function as documented here.\n  bang   The general purpose function, that accepts a prefix and the thing to be searched, and opens it with browse-url.\n  bang-info   This no-argument function takes the caller to the Bang homepage where one can learn more about it.\n  bang-find-prefix   If one wishes to learn which prefix is needed for which website, this function can be called that uses Bang\u0026#39;s own search to find it.\n    bang.el and Org-roam   What is Org-roam?\n A plain-text knowledge management system.\n  Inspired by Roam Research, org-roam is the best tool for creating a personal wiki, knowledge store, or Zettelkasten. I\u0026#39;ve accumulated \u0026gt;8500 nodes after a year of use !wa 8500/365 so I can attest to its brilliance. I originally started writing bang.el to quickly view the Wikipedia page of the subject I was writing about. For this reason, the initial name of the project was roam-to-wiki.el and the first function became bang-roam-wiki.el, which searches the current org-roam node in Wikipedia.\n I find this to often be the case. A small simple function … we grow scope. Introduce variable where there was none previously. roam-to-wiki.el became bang-roam.el and then, simply, bang.el. The bang-roam and bang-roam-wiki functions still exist, so you can easily search for a node\u0026#39;s title, either in Wikipedia, or anywhere else.\nbang-roam   Calls bang with the caller\u0026#39;s choice of prefix and the current org-roam node\u0026#39;s title.\n  bang-roam-wiki   Calls bang with the \u0026#34;w\u0026#34; prefix and the current org-roam node\u0026#39;s title.\n    Ideas   I have wondered if bang might be a good tool for improving the experience of searching for documentation whilst programming. I commonly find myself highlighting a symbol and calling (bang \u0026#34;clj\u0026#34; ...) to find its definition in in ClojureDocs. Perhaps a function called bang-docs which determined its prefix from whichever major mode was currently active, and the term defaulting to the symbol at point, would provide, regardless of the language used, an harmonious solution to documentation searching.\n There are tools like Zeal and Dash, but I have found them to be a pain as documentation is kept in an external application. Helm Dash might be a good alternative as it supposedly runs everything from inside Emacs, but I have yet to try it out.\n  The code  1  (require \u0026#39;org-roam)     Until I can work out how to make org-roam optional, it is required due to the bang-roam functions.\n1 2 3 4 5 6 7 8 9 10 11 12  (defun bang-make-link (prefix term) \u0026#34;Make the link that is used to search with Bangs, \u0026#39;!PREFIX TERM\u0026#39;.\u0026#34; (concat \u0026#34;https://duckduckgo.com/?q=!\u0026#34; prefix \u0026#34;+\u0026#34; term)) (defun bang (prefix term) \u0026#34;Using Bang, search for TERM in website with corresponding PREFIX.\u0026#34; (interactive (list (read-string \u0026#34;Enter the Bang prefix: \u0026#34;) (read-string \u0026#34;Enter the term you wish to search: \u0026#34; (when (use-region-p) (buffer-substring (region-beginning) (region-end)))))) (browse-url (bang-make-link prefix term)))     bang is the central function of the package. If there is an active region, it is used as the default TERM argument. See the section on default arguments for an explanation of how this works, and here for more information on elisp\u0026#39;s interactive forms.\n bang-make-link demonstrates a good habit of extracting sections of code into pure functions.\n bang-info and bang-find-prefix just call the functions (bang \u0026#34;bang\u0026#34; \u0026#34;\u0026#34;) and (bang \u0026#34;bang\u0026#34; WEBSITE), to access Bang\u0026#39;s own information page.\n1 2 3 4 5 6 7 8  (defun bang-roam (prefix) \u0026#34;Use the node\u0026#39;s title to search using the Bang PREFIX.\u0026#34; (interactive \u0026#34;sEnter the bang prefix: \u0026#34;) (condition-case nil (bang prefix (org-roam-node-title (org-roam-node-at-point))) (error (message \u0026#34;Error: not inside an org-roam node.\u0026#34;))))     condition-case is elisp\u0026#39;s equivalent of a try-catch statement. It executes the bodyform, in this case a call to bang with a prefix and the node\u0026#39;s title as its arguments, but in the case that one is not inside a org-roam node it throws an exception. After the bodyform, one can provide a number of handlers of the form (ERROR-TYPE body) which are executed if the throw exception matches the ERROR-TYPE. In bang-roam it just informs the caller that the function cannot be called outside of a org-roam node.\n1  (provide \u0026#39;bang)      Using the region as a default argument   Previously, the bang function took no notice of whether a region was active or not.\n1 2 3 4 5 6  (defun bang (prefix term) \u0026#34;Using Bang, search for TERM in website with corresponding PREFIX.\u0026#34; (interactive \u0026#34;sEnter the Bang prefix: sEnter the term you wish to search:\u0026#34;) (browse-url (concat \u0026#34;https://duckduckgo.com/?q=!\u0026#34; prefix \u0026#34; \u0026#34; term)))     This could be frustrating, as it might require one to carefully retype something that is already present in ones buffer. With thanks to Prof Hugo Nobrega, I\u0026#39;ve rewritten this function so that if there is an active region it will be displayed in the minibuffer when one is prompted for the term argument, allowing one to either confirm it or enter something different.\n1 2 3 4 5  (interactive (list (read-string \u0026#34;Enter the Bang prefix: \u0026#34;) (read-string \u0026#34;Enter the term you wish to search: \u0026#34; (when (use-region-p) (buffer-substring (region-beginning) (region-end))))))     This also demonstrates the comprehensive form of interactive that allows one to form a generic list that is that passed as the arguments of the function. buffer-substring copies text from the buffer between two marks, being region-beginning and region-end.\n  Conclusions   Emacs\u0026#39;s extensibility is fantastic — no other editor makes it so easy to write new functions, leveraging existing functions and those of all installed packages. One can just write a tiny elisp file, whereas something like Visual Studio Code requires one to create a new Node.js package. The development experience is also great, being able to define and evaluate in the running editor, the feedback cycle is almost instant. It is vanishingly rare for developers to write their own editor plugins or extensions and yet for Emacs users it is a right of passage from when one first writes ones own init.el.\n Elisp\u0026#39;s interactive forms are adaptable, and let us create a nice UI / UX. I was quickly frustrated with the interactive short forms s and r, but glad to find out that the longer form where one must create the argument list is not unwieldy.\n One should streamline those processes that one spends the most total time on. Some of these tasks are so small that they are basically invisible, but with the frequency with which we do them, they add up to a large total time. A similar approach can be taken to reducing distractions.\n One function can snowball into a whole project, this can be good or bad. Will it lead to a piece of work that will be useful to yourself and others? Or will it never be finished, with nothing learnt? What\u0026#39;s the pay-off? I\u0026#39;ve seen mistakes made like this, particularly when one aims for too much abstraction or generalisation, like a layer to abstract over all databases whether they be SQL, document, or graph. But then the opposite is true for something like Git which grew out Linus Torvald\u0026#39;s need for a source control system when developing Linux.\n  ","permalink":"http://blog.almost.education/posts/bang-el/","summary":"Use DuckDuckGo\u0026#39;s !Bangs from the comfort of Emacs!","title":"æ/bang.el"}]