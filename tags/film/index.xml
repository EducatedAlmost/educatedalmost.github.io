<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>film on blog.AlmostEducated</title><link>http://blog.almost.education/tags/film/</link><description>Recent content in film on blog.AlmostEducated</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Fri, 19 Nov 2021 00:00:00 +0000</lastBuildDate><atom:link href="http://blog.almost.education/tags/film/index.xml" rel="self" type="application/rss+xml"/><item><title>Ã¦/Rashomon</title><link>http://blog.almost.education/posts/rashomon/</link><pubDate>Fri, 19 Nov 2021 00:00:00 +0000</pubDate><guid>http://blog.almost.education/posts/rashomon/</guid><description>&lt;p>
&lt;em>Clojure functions that build datastructures from events with dynamic perspectives.&lt;/em>&lt;/p>
&lt;p>
&lt;em>Rashomon&lt;/em> is a 1950 psychological thriller film directed by Akira Kurosawa. Based on Ryunosuke Akutagawa&amp;#39;s &lt;em>In A Grove&lt;/em>, it tells the story of a samurai&amp;#39;s death from the perspectives of: the bandit who killed him, his wife, the samurai himself, and finally a woodcutter, none of whom can agree at the subsequent trial.&lt;/p>
&lt;p>
It was the first Japanese film to receive international acclaim, doing so after being panned by Japanese critics. From the film came the term &lt;em>Rashomon effect&lt;/em>, used to describe the situation in which an event is given differing or contradictory interpretations by different observers.&lt;/p>
&lt;p>
I was inspired by the film when writing &lt;a href="https://github.com/EducatedAlmost/rashomon">Rashomon&lt;/a>, a library for Clojure which rebuilds datastructures from events, with emphasis placed on the flexibility of &lt;em>perspectives&lt;/em>, the functions that act for each event. In homage to its eponym it uses &lt;em>testimony&lt;/em> to refer to the datastructure being constructed.&lt;/p>
&lt;div class="src src-clojure">
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-clojure" data-lang="clojure">&lt;span class="p">(&lt;/span>&lt;span class="k">def &lt;/span>&lt;span class="nv">bandit-perspectives&lt;/span>
&lt;span class="p">{&lt;/span>&lt;span class="ss">:ae.rashomon.event.type/foo&lt;/span>
, &lt;span class="p">(&lt;/span>&lt;span class="k">fn &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nv">testimony&lt;/span> &lt;span class="nv">event&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nb">assoc &lt;/span>&lt;span class="nv">testimony&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="ss">:guilt?&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nb">not &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="ss">:qux&lt;/span> &lt;span class="nv">event&lt;/span>&lt;span class="p">))}))})&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="k">def &lt;/span>&lt;span class="nv">samurai-perspectives&lt;/span>
&lt;span class="p">{&lt;/span>&lt;span class="ss">:ae.rashomon.event.type/foo&lt;/span>
, &lt;span class="p">(&lt;/span>&lt;span class="k">fn &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nv">testimony&lt;/span> &lt;span class="nv">event&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nb">assoc &lt;/span>&lt;span class="nv">testimony&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="ss">:guilt?&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="ss">:qux&lt;/span> &lt;span class="nv">event&lt;/span>&lt;span class="p">)}))})&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nf">rashomon/apply-event&lt;/span>
&lt;span class="nv">testimony&lt;/span>
&lt;span class="nv">bandit-perspectives&lt;/span>
&lt;span class="p">{&lt;/span>&lt;span class="ss">:ae.rashomon.event/type&lt;/span> &lt;span class="ss">:ae.rashomon.event.type/foo&lt;/span>
&lt;span class="ss">:qux&lt;/span> &lt;span class="ss">:guilty&lt;/span>&lt;span class="p">})&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="nf">rashomon/build&lt;/span> &lt;span class="nv">samurai-perspectives&lt;/span> &lt;span class="nv">events&lt;/span>&lt;span class="p">)&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>
By changing the set of perspectives we use when applying the event, the testimony we produce can be completely different. This functionality makes it incredibly easy to change our interpretation of events, do A/B testing where different users have different interpretations, read perspectives from configuration.&lt;/p>
&lt;p>
I think this is quite novel and I&amp;#39;m excited to see what you can create with it.&lt;/p></description></item></channel></rss>