<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>programming on blog.AlmostEducated</title><link>http://blog.almost.education/tags/programming/</link><description>Recent content in programming on blog.AlmostEducated</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Wed, 24 Nov 2021 13:30:06 +0000</lastBuildDate><atom:link href="http://blog.almost.education/tags/programming/index.xml" rel="self" type="application/rss+xml"/><item><title>æ/alias+ns</title><link>http://blog.almost.education/posts/alias-ns/</link><pubDate>Wed, 24 Nov 2021 13:30:06 +0000</pubDate><guid>http://blog.almost.education/posts/alias-ns/</guid><description>Macros to ease the use of aliases in Clojure.
https://github.com/EducatedAlmost/alias-ns.git
Qualified keywords have ballooned in popularity since the release of spec with Clojure 1.9. And thankfully so! A creed amongst Clojurians is that maps should be open to modification, meaning that I should be able to add data to a map without worrying that it will break its consumer, and that when processing maps we shouldn&amp;#39;t remove data using something like select-keys without good reason.</description></item><item><title>æ/Rashomon</title><link>http://blog.almost.education/posts/rashomon/</link><pubDate>Fri, 19 Nov 2021 00:00:00 +0000</pubDate><guid>http://blog.almost.education/posts/rashomon/</guid><description>See things from another perspective.</description></item><item><title>Correlation and causation IDs</title><link>http://blog.almost.education/posts/corr-caus-ids/</link><pubDate>Thu, 18 Nov 2021 00:00:00 +0000</pubDate><guid>http://blog.almost.education/posts/corr-caus-ids/</guid><description>This is a very useful pattern that I see rarely used. When working with systems that pass messages, it can be difficult to later reconstruct a conversation or the sequence of events. It is second nature to us to assign entity IDs1 to messages, but two other IDs will help us to understand the structure of conversations.
One is a correlation ID. This is used to tie the conversation together.</description></item><item><title>Event Sourcing</title><link>http://blog.almost.education/posts/event-sourcing/</link><pubDate>Wed, 17 Nov 2021 00:00:00 +0000</pubDate><guid>http://blog.almost.education/posts/event-sourcing/</guid><description>This article is in the process of being written.
Introduction State isn&amp;#39;t stored. We rebuild it every time we need to query or do something to it. It has its drawbacks, but it does allow us to do things that would be impossible otherwise. We can view out system&amp;#39;s history with new perspectives, or add in missed past events. Our view of the past is necessarily wrong for any complex system and yet we design systems that lack any way to account for that.</description></item><item><title>æ/Demesne</title><link>http://blog.almost.education/posts/demesne/</link><pubDate>Wed, 17 Nov 2021 00:00:00 +0000</pubDate><guid>http://blog.almost.education/posts/demesne/</guid><description>You don&amp;#39;t understand a pattern until you can implement it — domain-driven design, CQRS, event sourcing.</description></item><item><title>æ/read-time.el</title><link>http://blog.almost.education/posts/read-time-el/</link><pubDate>Tue, 16 Nov 2021 00:00:00 +0000</pubDate><guid>http://blog.almost.education/posts/read-time-el/</guid><description>An Emacs package that tells you how long it takes to read things.</description></item><item><title>Serialising with Java generics</title><link>http://blog.almost.education/posts/serialising-java-generics/</link><pubDate>Wed, 27 Oct 2021 00:00:00 +0000</pubDate><guid>http://blog.almost.education/posts/serialising-java-generics/</guid><description>Serialising and deserialising with Java generics and TypeReferences.</description></item><item><title>æ/bang.el</title><link>http://blog.almost.education/posts/bang-el/</link><pubDate>Wed, 20 Oct 2021 00:00:00 +0000</pubDate><guid>http://blog.almost.education/posts/bang-el/</guid><description>Use DuckDuckGo&amp;#39;s Bangs from the comfort of Emacs!</description></item></channel></rss>